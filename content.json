{"meta":{"title":null,"subtitle":null,"description":"This is a website for my class Fundamentals of Interactive Design at Seminole State College.","author":"Ray Villalobos","url":"http://yoursite.com/fid"},"pages":[{"title":"","date":"2018-01-21T23:20:26.285Z","updated":"2018-01-21T23:20:26.285Z","comments":true,"path":"slides/01a_the_internet_and_urls.html","permalink":"http://yoursite.com/fid/slides/01a_the_internet_and_urls.html","excerpt":"","text":"How the internet works Client makes a request to a server. The server routes the request to a service Server sends data back to client Teacher’s NotesBefore we get started, let’s talk a bit about how the internet works. You probably already know generally speaking how it works, but I think it would help to cover more specifically what it’s doing in the background First There’s two types of computers on the internet…clients and servers. Any computer can behave as a client or a server. A client is the computer that makes requests for information to a server. The server has special software installed that sends the request for the information to a service. That’s usually some application that does something with the requests. You could be requesting a webpage, or an email. The server will analyze the request and then send it to the appropriate application to process. Finally, once the server finishes requesting the information, it’s sent back to the client as a webpage, an email, or whatever. Internet Protocols Communication happens through protocols Various server apps handle different protocols http, pop, smtp, ftp, https Author’s NotesOn the internet, communication happens through protocols. If you’ve seen Star Wars you might remember that C3-PO is a protocol droid and that he got hired by Luke’s uncle because he spoke the language of moisture vaporators. The internet is a bit like that, in order to get things done, you have to be able to communicate in different languages. Each service has it’s own language or ‘protocol’. When requests are made to the server, they happen in these different languages. By far, the most common protocol is http. You usually see it typed at the beginning of a web address, but there are others like pop and smtp for mail, ftp for file transfers and https for secure web connections. Uniform Resource Locatorhttps://www.youtube.com/watch?v=MspVCc0_R3g&amp;t=37s#top The initial request/command Author’s NotesYou might be asking how the server knows what to do. The key to that magic is the URL or Uniform Resource Locator. You’re probably used to seeing URLs on the web. They have all the information the server needs to do it’s job. This is a pretty complex looking URL, but it’s divided into several different parts and it’s important that you understand how these work. Note: Sometimes the server will have a shortened version of this without all of the information to make it easier to read. Protocolhttps://www.youtube.com/watch?v=MspVCc0_R3g&amp;t=37s#top Language of the request http vs https Author’s NotesThe first piece of the request is the protocol. This is the main thing the server needs to know, so that it can send the request to the proper service or application. Here, it’s https, because it’s an http request that’s a bit more secure. Most modern sites today use https instead of http because it’s a more secure version in which pages are sent encrypted. Subdomainhttps:// www .youtube.com/watch?v=MspVCc0_R3g&amp;t=37s#top Domain inside domain Helps you divide requests Author’s NotesServers have a lot of ways to divide requests and one of the ways you can do that is by using a sub-domain. A sub-domain allows the same domain to do multiple jobs. It’s like having a website inside another website. You’ve probably noticed that most websites have a www. subdomain, but there can be others, so for example, you can go www.google.com for web searches, images.google.com to do image specific searches or mail.google.com to use your google email. Domainhttps://www. youtube .com/watch?v=MspVCc0_R3g&amp;t=37s#top The location of a service on the internet Converted to IP addresses by DNS Servers IP addresses = Zip Codes DNS Servers = Post Office Author’s NotesThe next part of the URL is what most people associate with a website and it’s called the domain name. Have you ever asked yourself how your browser knows where to find a website? It happens because of the domain name. This name is associated with a series of numbers called IP addresses on the internet. The fact that it is a name is a convenience for humans because it would be too hard to remember all of the numbers everytime we went to a website. An IP address is like a phone number or zip code, it represents the physical location of the server on the internet. The names and numbers are stored through a sub-network inside the internet called DNS or Domain Name Servers. They act as an index or phone book of the names and IP addresses. Think of DNS servers as the Post Office, by reading the zip code, they know the part of the country you live in and can route the mail to the appropriate location. Top Level Domainshttps://www.youtube. com /watch?v=MspVCc0_R3g&amp;t=37s#top Domain type .com, .net, org, .gov, .edu Country specific Monopo.ly Instagr.am Very flexible today Author’s NotesThe next part is the TLD or Top Level Domain. It represents the domain type and is supposed to identify the type of domain that you’re using. The most common types are .com for companies, .net for internet service providers, .org for non-profit entities, .gov for government organizations and .edu for educational organizations. In reality the requirement that the TLDs match function hasn’t been enforced and has been removed. .com is by far the most common and most people will try to use a .com TLD before they use anything else. In addition to that every country as assigned it’s own TLD. Those are usually two letters long, so for example .co is for colombia, .ly is for lybia and .am is for amsterdam. A lot of people use these to make interesting URLs, so for example many tech companies use the .io (British Indian Ocean Territory) TLD for web applications like atom.io. Most of the time country specific TLDs are a bit more expensive. In recent years, the amount of TLDs has exploded into many other categories, which include things like .dad, .biz, .info, .mobi, etc. Port Numberhttps://www.youtube.com :8707 /watch?v=MspVCc0_R3g&amp;t=37s#top A way to divide app requests Request sent through ports Author’s NotesAnother thing you might see on a URL as a way to further divide app requests is something called a port number It follows the TLD and starts with a colon and has a number. Think of this as channels on radio or TV. They allow you to send different types of information on the same domain or subdomain. When you request web pages, they are sent through one of these channels, although most of the time you won’t see these or deal with them. You may see these when setting up FTP, mail or some advanced web projects. Pathhttps://www.youtube.com /watch ?v=MspVCc0_R3g&amp;t=37s#top The App, page, file or service you want Often a folder/file structure Can be data passed Author’s NotesNext is the path of the request. This is separated by slashes / and let the server know the location of the service you’re requesting. They can be setup in a couple of ways. One way is to set it up to represent the directory location of the file you need. So for example, we could assume that watch specified in a youtube request represents the name of a folder in the server hosting the google application. If there was a file called video.mp4 then the path might be /watch/video.mp4. This isn’t the way YouTube or some other service works though, they use the PATHS as information passed to the server. The current way of managing URLs can also be written like this: https://www.youtube.com/watch?v=MspVCc0_R3g&amp;t=37s#top Query/Parametershttps://www.youtube.com/watch ?v=MspVCc0_R3g&amp;t=37s #top Information to pass Name/Value Pairs Author’s NotesThe next part of the URL are called query/parameters. You can use the URL to pass detailed information to the server. Sometimes this data is passed in different ways and query parameters is a common way to do this. The query starts with a question mark and you can then add a series of variables an equal sign = and then each name/value pair separated by an ampersand &amp;. In the case of our video request, we’re passing along the video ID in the v variable and and then the timecode using the t variable. Fragmentshttps://www.youtube.com/watch?v=MspVCc0_R3g&amp;t=37s #top Subordinate resource ID inside page query/parameters Author’s NotesA fragment is another way to pass information through a URL. It refers to a resource that is inside another resource. It’ used in a couple of ways on pages. You’ll often see this used inside a page to refer to another section of the same page with a specific ID. So if you go to the grid page in the Bootstrap Documentation, you’ll see the normal documentation for the grid website, but if you want to read the documentation on grid alignment, you add a # and then the name of the section of the page you want to go to. Sometimes the fragments are used more like query/parameters, it depends on how the server is set up to handle URLs."},{"title":"","date":"2018-01-21T23:19:48.222Z","updated":"2018-01-21T23:19:48.222Z","comments":true,"path":"slides/01b_hosting_on_github.html","permalink":"http://yoursite.com/fid/slides/01b_hosting_on_github.html","excerpt":"","text":"How hosting works Servers have needs Own/Rent/Services Author NotesAlthough every computer on the internet can be a server, not all of them should be. A laptop would be a horrible server because any site hosted in it would go down every time you closed it. So a server needs to have: Constant power Fast connection Maintenance/updates Most companies do not own their own servers because it takes a lot of very specialized knowledge to run and maintain servers. So they either rent servers to perform a variety of web functions or simply pay for specific apps or services like email, file storage, or http hosting. Git/Github Social Coding SCM/VCS Distributed Flat file hosting Author NotesGithub is a website created to help developers use and work with others to manage code. It’s based on a techology called Git, so it provides a number of features that visualize the way that Git works and makes it easier to manage online Git is a software configuration management or SCM piece of software which means that it is designed to help you manage how your software works. There are many kinds of SCM software and Git is known as a VCS or Version Control System. One of the things that makes git unique is that it is a distributed system, which means that the code can be stored on different machines. Git allows multiple people to work on different parts or versions of the software simultaneously. So instead of an assembly line model where each person works on a car right after someone else is done, git will allow someone to paint the car, while someone else installs the engine and someone else puts in the seats. Three things that wouldn’t normally be able to be accomplished at the same time. In this way, Git is like being able to crete alternate universes, where different people can work on copies of the same code without stepping on each others’ toes. Once each person is done, they can submit their version of what they have done to a site like Github, which would manage the project. One of the features that Github provides is the ability to host simple flat-file sites to the web for free. Flat-file sites mean sites that don’t constantly need to make requests to a server for data. It’s more than what we’ll need for this class. Git/Github Language Repository Branches/Forks Commit Pull Request/Merge Issues Author NotesIn this class, we’re going to be working exclusively with Github. Git is an avanced topic outside of the scope of this class, but since Github is based on git, let’s talk about the language you use when working with Git and Github. A Repository or repo is the place where your code is hosted. It’s the grand central station for you code. Github is designed to allow multiple people to have access to the code and a central location for all of that code makes sense. A github repo has it’s own URL that has your username and the name of the repo. Github uses this URL as the basis for many features. Github allows you to create and manage branches and most of the work on repos is done in one of these. Think of each branch as an alternate universe where different people work on versions of code. Each of these branches is known as a fork; dont think of it as a kitchen fork, but more of like a fork in a tree.. So you could have one branch for people working on painting the car, while another branch for people installing the engine. Every project gets on branch which is called the master branch. It’s where the current official version of the project is. Within each of these branches we can store sub-versions of the work into something called commits. Commits are markers that define different states or our code. So, for example, if we had a branch called painting we could create a commit for when we finished painting the hood of the car. Once we finished painting the drivers side, we could have another commit called ‘driverside’, etc. Using git and github we can navigate back and forth through these commits, so that we could go back and take a look at how the care looked before it was painted and after each of the different parts of the car were painted by moving through the commits. In code this also means that we can see the difference between commmits. So you can think of commits like having access to a time machine that lets you move back and forth through the history of the project. Once someone is finishes working with a branch, it’s time to merge the project back to the master branch. We do this through a mechanism called a pull request. A pull request is a way to request that the master branch be updated with the latest version of the code that has been worked on in other branches. So it’s like you telling the boss you’ve finished with your painting and to add your painting code to the car. This step is important because it’s possible for two people to be working on the same part of the code. Think of someone installing the glass in one of the windows while someone else is painting the door. They both made changes to the door and will both need to merge their changes with the main project. Another important concept in Github is the ability for people to file issues. Issues are notes that people can write to call attention to something or to work with tasks related to organizing a project. So, if someone notices a typo on a website, you can create an issue that let’s the owner know where to fix it. Better yet, you can fork the project, fix the typo and then issue a pull request with the changes yourself. This is what makes Github really useful. Lot’s of people can work on the same project and contribute easily and effectively. Github Repos Public/private README.md file Hosting strategy Author NotesGithub offers unlimited free hosting for public projects. You can also host private projects in some of the paid plans. A lot of the web’s most important projects are hosted on Github. One of the most important files in any projects is the README.md file. This is a file with information about the project. Sort of the homepage for your project on Github. It’s written in a format called markdown. It’s a pretty simple format to learn. It’s just simple text with some minor special characters that add formatting. Github’s process for setting up hosting is called Github Pages. It will direct a special URL generated by Github or even your own URL(additional setup required) to show whatever is on your repository. You can set up your URL to point to whatever is on your master branch, a docs folder insider your master branch, a specially named gh-pages branch. The link for your project will be username.github.io by default, although it’s configurable to also be it’s own URL."},{"title":"","date":"2018-01-21T23:19:28.423Z","updated":"2018-01-21T23:19:28.423Z","comments":true,"path":"slides/02_learning_html.html","permalink":"http://yoursite.com/fid/slides/02_learning_html.html","excerpt":"","text":"What is HTML? HyperText Markup Language Hypertext Markup Author NotesHTML stands for HyperText Markup Language and is the language that powers the web. You can break what HTML means into two parts. First is HyperText and then the markup language. Let’s talk about those two things. HyperText is a document that can be linked to other related documents. Since documents are linked to each other, it creates a web of links that we know as the world wide web. HTML is called the Markup Language. Markup is special syntax for annotating a document. Think of markup as what your english teacher would do to a document when they correct it. They would ‘mark it up’ with corrections that need to be done. Semantic HTML One of three Defines structure Never include layout HTML critical Author NotesHTML is one of the big three core languages needed to build ANY web page. They are HTML, CSS and JavaScript. HTML is easily the most important of the three and is in chrage of defining the structure of a page. CSS controls how a page looks and JavaScript controls how users can interact with a website. Without proper HTML, the other two languages won’t work. One of the most important jobs for HTML is to focus on the semantics of your document. Semantic means adding meaning to the content of your page. Every HTML page has three different parts to it. First, is the structure of the document, which is defined by the markup that you use to add meaning to your page. That’s what we’re talking about today. The second is the styles or CSS that can add the look and feel of the document and the last is the JavaScript that adds interactivity to your pages. It’s critical that you let each component or part handle the job it’s designed for. So it’s crucial that you NOT add anything that is not markup to HTML. Certain html markup will make certain things look at certain way, but what’s really important is that you focus on adding meaning, not looks to your document using HTML. HTML is the most critical of the three components. If you mess up the structure of the HTML, then neither the styles will work or the interactivity. Tag Structure1&lt;element [attribute[='value']...&gt;content[&lt;/element&gt;] element name 0-&infin; attributes No order in attributes Author NotesYou start HTML tags using the less than and greater than signs with an element name inside. You can use a number of elements inside the greater and less than signs. There are hundredths of elements and the best place to find them is to look online on this MDN website. Inside the first part of the element you can add none or an infinite number of attributes. These attributes will provide additional information to the browser about the tags you’re using. For example, to create an image, you use the &lt;img&gt; tag, but it doesn’t make sense to add an &lt;img&gt; tag without telling the browser the location of the image, you do that with a src attribute. Standalone vs Container&gt;See the Pen zdmGxJ by Ray Villalobos (@planetoftheweb) on CodePen. Inserts vs wraps Author NotesStandalone tags like the &lt;img&gt; tag are simply there to insert some element like an image into your page. Container tags are designed to wrap some other text or elements, so they change the meaning of what you place in there. Heading ElementsSee the Pen rzqaEv by Ray Villalobos (@planetoftheweb) on CodePen. Denote Importance Author Notes The heading elements are pretty important in HTML, they help you create headings for your document. There are six heading elements and they are containers, so they need beginning and ending versions of the tags. The number denotes importance, so a H1 is more important than an H2 and so on. You should use these to define the level of importance of the headlines in your content. Think of it like a book, the H1 would be the title and the H2 could maybe be chapter titles. Compound Tags See the Pen BdqNzQ by Ray Villalobos (@planetoftheweb) on CodePen. Lists: &lt;ol&gt;, &lt;ul&gt;, &lt;dl&gt; Author Notes Some tags like the list tags are considered compound tags because they require two sets of tags. One that defines the type of list and another that identifies the different elements within the list. In the case of lists an OL means that the order of the list items denotes some sort of order like in military ranks. An unordered list means that the list elements are in no particular order like when you make a list of groceries. Block Level ElementsSee the Pen EvdjRz by Ray Villalobos (@planetoftheweb) on CodePen. Major Sections: &lt;h1&gt;, &lt;p&gt; Author NotesA block-level element occupies the entire space of its parent element (container), thereby creating a “block.” Are usually formatted in a new line before and after the tags by browsers Think of it as a stack of boxes or big containers. Inline ElementsSee the Pen wqYaYP by Ray Villalobos (@planetoftheweb) on CodePen. Inline Elements: &lt;a&gt;, &lt;em&gt; Author NotesInline elements occupy the space that are bound by the parent or container tag, they don’t break the flow of content. They are often placed inside block level elements. Basic Page 12345678910111213141516&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width\"&gt; &lt;title&gt;UPDATE TITLE&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!-- content goes here --&gt;&lt;h1&gt;Headline&lt;/h1&gt;&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores vel vitae temporibus aliquid deleniti id culpa soluta natus, corrupti eaque neque et ratione. Laudantium earum assumenda beatae aspernatur id est.&lt;/p&gt;&lt;!-- content goes here --&gt;&lt;/body&gt;&lt;/html&gt; &lt;DOCTYPE&gt;, &lt;html&gt;, &lt;head&gt;, &lt;meta&gt;, &lt;title&gt;, &lt;body&gt; Author NotesEvery page needs to have a basic page structure using these elements. The &lt;DOCTYPE&gt; element defines the version of HTML that you’re using. The &lt;html&gt; element is the container for your entire document. The &lt;head&gt; element has content that you want the browser to load first and is for information that you want your browser to know about, but not necessarily be displayed to the user. The &lt;meta&gt; element is a generic tag that you can use to pass certain information about your page to your browser. in this case we’re passing along the charset, which is the types of characters used on this page. In this case it’s roman letters with accent marks, but you can use a different charset for japanese or other alphabets. The viewport meta tag tells the browser that this page has been designed with mobile devices in mind. The &lt;title&gt; element displays the title on the window menu of the current page in most browsers. It’s also important for search engines. The &lt;body&gt; element is where all of the content you want your user to be able to see goes. Resources Saving: index.html Validator: Checks for errors Atom Packages: emmet, linter, atom-live-server, linter-htmlhint, html-entities, linter-csslint, emmets-snippets-compatibility Sample Resume Author NotesWhen saving HTML documents you need to use the .html or .htm exension. You can save yourself and your visitors some time by using a special name for your main html document. If a document is named index.html, then the browser will assume it’s the default document for that folder. So, for example, if you’ve placed a document called resume.html in a folder called htmlresume in your projects folder…and your site is called mysite.com, then the URL to this document would be: http://mysite.com/projects/htmlresume/resume.html, however, if you name your document index.html, then you can leave the last part out. So your document would be acessible at: http://mysite.com/projects/htmlresume. It’s a bit shorter and easier to remember. The validator is a way to check that there are no errors in your document structure. ALL HTML PROJECTS MUST VALIDATE To make your life easier, you can install a few Atom packages, they are like extensions to Atom that can provide some extra features. Here’s a sample resume text so that I can practice creating the sample assignment with you in class."},{"title":"","date":"2018-01-16T18:19:07.084Z","updated":"2018-01-16T18:19:07.084Z","comments":true,"path":"slides/demo.html","permalink":"http://yoursite.com/fid/slides/demo.html","excerpt":"","text":"Installing Grab/Fork from repo docs folder has presentation slides/demo.md subfolder has main markdown 100% Markdown Rayveal assumes you want to use markdown to create slides. The index.html file points to a markdown file in slides/demo.md. It does whatever reveal.js can can. You can add invisible notes for yourself using two &gt; &gt; after a carriage return (see markdown file) Author Notes: Author notes are similar to markdown blockquotes, but you use double greater than signs. They won’t appear on your slides, so I personally use them as reading notes, but Reveal.js has a presentation mode that allows you to see them in your slides. Persistent NavigationNotice: the persistent navigation bar at the bottom is on every page. It will disappear after 5 seconds. You can also toggle it by hitting the ctrl-t key. To modify, look for the following code (delete it if you don’t need it) 1234567&lt;footer class=\"footer\"&gt; &lt;div class=\"persistent\"&gt; &lt;strong&gt;Slides:&lt;/strong&gt; &lt;a href=\"http://bit.ly/thenext50\"&gt;bit.ly/thenext50&lt;/a&gt; &amp;bull; &lt;strong&gt;Contact:&lt;/strong&gt; &lt;a href=\"https://www.linkedin.com/in/planetoftheweb\"&gt;LinkedIn&lt;/a&gt; | &lt;a href=\"https://www.linkedin.com/learning/instructors/ray-villalobos\"&gt;courses&lt;/a&gt; | &lt;a href=\"http://twitter.com/planetoftheweb\"&gt;@planetoftheweb&lt;/a&gt; | &lt;a href=\"http://github.com/planetoftheweb\"&gt;github&lt;/a&gt; &lt;/div&gt; &lt;div class=\"smaller\"&gt;Use arrows to navigate, esc for overview&lt;/div&gt;&lt;/footer&gt; Author Notes: Author notes are similar to markdown blockquotes, but you use double greater than signs. They won’t appear on your slides, so I personally use them as reading notes, but Reveal.js has a presentation mode that allows you to see them in your slides. Multiple slidesYou can use multiple markdown files within the same slide, just add a different slide in the slides folder and link to it. (see markdown file for how it works)Sidebar MenuPress the ctrl-m key to show sidebar menu. You can use it to jump to different slides. There is also an index.txt file in the slides menu, where you can add other slides you want to feature in your menu. Standalone FolderPresentations live in a docs folder within the main project, simply upload the docs folder to a server and change the name if you want. It’s self contained. It’s also easy to add as documentation using Github Pages. Fragments Are on by default You can write HTML lists if you don’t want them Code options Bootstrap-like colors for code primary success info warning danger tooltipsfor overlay explanations on rollover Has Icon Template with an icon Preloading font-awesome by Dave Gandy &lt;!– .slide: data-state=”hasicon” –&gt; Background Video &lt;!– .slide: data-state=”textonvideo” data-background-video=”http://planetoftheweb.com/i/video.mp4“ –&gt; Note: You also have the option of creating video as a background using regular reveal.js tags. Background with an imageAnd some text, small shadow… &lt;!– .slide: data-state=”textonimage” data-background-image=”http://planetoftheweb.com/i/photo.jpg“ –&gt; Here’s some code123456789var electron = require('electron');var BrowserWindow = electron.BrowserWindow;var app = electron.app;app.on('ready', function() &#123; var appWindow; appWindow = new BrowserWindow(); appWindow.loadURL('http://raybo.org');&#125;); Syntax highlighted, editable by default Embedded CodeHere’s a sample of an embeded CodePen. Use an iframe. See the Pen Bootstrap 4 by Ray Villalobos (@planetoftheweb) on CodePen. TablesHere’s what a table looks like. Use the tables generator to help you write the markdown. Extra small &lt; 768px Small ≥ 768px Medium ≥992px Large ≥1200px Container Auto 750px 970px 1170px Size .col-xs- .col-sm- .col-md- .col-lg- Column width Auto ~62px ~81px ~97px Circles one two three four five just list items &lt;!– .slide: data-state=”circles” –&gt;"},{"title":"Slides","date":"2018-01-15T23:29:41.636Z","updated":"2018-01-15T23:29:41.636Z","comments":true,"path":"slides/index.html","permalink":"http://yoursite.com/fid/slides/index.html","excerpt":"","text":""},{"title":"","date":"2018-01-15T23:29:41.636Z","updated":"2018-01-15T23:29:41.636Z","comments":true,"path":"slides/slides.html","permalink":"http://yoursite.com/fid/slides/slides.html","excerpt":"","text":""},{"title":"Course Syllabus","date":"2018-01-06T19:34:20.000Z","updated":"2018-01-16T18:48:00.266Z","comments":true,"path":"syllabus/index.html","permalink":"http://yoursite.com/fid/syllabus/index.html","excerpt":"","text":"The purpose of Fundamentals of Interactive Design is to give the students an overview of working with core Web Technologies and learning to build a web presence. Specifically, you’ll learn the basics of HTML, CSS and we’ll use the Bootstrap framework to build a series of smaller and large projects. Materials needed A Github Account (free) A lynda.com account An HTML text editor: Visual Studio Code or Atom Note: There is no book required for this class. Class Structure I’ll start each class reviewing the week’s previous assignments. This is an important way for me to give you feedback on the work you’re doing for the class and it’s part of working in the field. Please don’t take it personally, critiques can be difficult to hear, but I have your best interests in mind. I expect you to be here during this time and listen to what I tell you. I also expect you to fix issues I mention during the critiques. After critiques, I’ll give the class a lecture and may give you a link to an online slide presentation. The presentation may have some short exercises for you to finish during class. After the lecture, we’ll have some lab time for this course. I expect you to use this time to work through the exercises. Do NOT work on other class coursework during my class. If you don’t have any questions or are caught up on your assignments you are welcome to leave the class quietly. Assignment SubmissionsAssignments in this class are designed to help you work towards your projects. A big part of your grade will depend on you being able to keep up with the assignments. Assignments are due on the time and date mentioned in Canvas. If you fail to turn assignments in when they’re due, you’ll receive a 0 for the assignment. I will grade assignments roughly the week after they’re due. Use that time to correct errors or issues I’ve mentioned during the critiques for a better grade. Make sure you read the instructions and ruberic for the assignments. I will award different points as detailed in the ruberic section of the assignments. Github RepoIn addition to Canvas, there is a github repository for this course, where you can ask questions and find slides and other documentation for the course. You’ll be creating your own repository for the course in order to do the assignments, so make sure you get started by getting a github account. Asking questionsIf you have questions, you can easily ask them usingGithub Issues. Please make sure you follow the guidelines for issue submissions. It’s not realistic for me to be answering questions about the assignments hours before the assignment is due, so make sure you get started early, so you can give me enough time to answer and for you to react to those answers. I expect you to ask me questions no later than a day before the assignment is due. Personal Assistance in LabsI am an adjunct, which means that I have no office hours or an office at the college. I can answer questions through github issues and will be happy to do so or help you during class. If you need additional assistance, there are a number of labs available throughout the campus. Make sure youcheck the schedules for when the labs are available. Learn more Github for Web Designers Learn Git and Github Git Essential Training"},{"title":"","date":"2018-01-30T00:23:48.439Z","updated":"2018-01-30T00:23:48.439Z","comments":true,"path":"slides/03_structural-html.html","permalink":"http://yoursite.com/fid/slides/03_structural-html.html","excerpt":"","text":"The HTML Outline Right click -&gt; Inspect Author NotesWhen you create a page, you start with some text and what you’re doing as a developer is adding markup to that content that helps define the structure of the page. You can think of it as creating an outline of a book. The book might have a title and some headlines or other content. You can take a peek at this outline using different browsers. In Google Chrome, you can right click on a page and then choose inspect. You’ll be taken to a special developer view where you can see the outline that HTML is describing. On the left side of the elements tab, you’ll see a series of triangles that you can use to expand and collapse the outline. There’s also an outline navigation bar at the very bottom of the page. Notice that when you hover over the content on the page or you make selections on the elements tab, the browsers will highlight that area of the page. Your editor can also do that, but only if you’re using whitespace to intent code properly. Structural Elements Block level Define areas Common and generic Author NotesStructural elements in HTMl are a set of block level elements that help you futher enhance the structure of your sites. By block level, we mean that these are major sections of your site which are usually displayed as having space before and after the section. They are useful because them make it easy to define areas of content and separate the regular content from utility areas on your HTML. So for example, you can identify a section of code to represent a footer. That usually means the bottom of a page or even another section with some supporting content. They are usually fairly common areas that people have on websites like headers, footers, navigation, sidebars, etc. Although these names have specific conotations in terms of usage, they are flexible enough so that they can take on a few different contexts. For example, you can have the footer tag come to define the bottom footer of the whole page, but it could also mean a footer at the bottom of some html displaying a product. Header Introductory content Inside other elements See the Pen Header Sample by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe header element represents introductory content and it’s often used at the top of a page. At the top of the page it often contains the navigation for the site or some introductory content. It can sometimes be confused with the head element which is used for items you don’t want the browser to display. However, a header can also be used inside other elements, so for example you can have a sidebar header or an article header. Footer Ending of content Often at bottom See the Pen Footer Sample by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesA footer element represents is a special section that represents the footer or the end of some level of content. It’s often used at least at the bottom of a website to represent things like copyright information, information about the author of the website, copyright information and links to related documents. However, just like with the header, it can also be used to define the beginning part of an element like a card, a sidebar, and article or others. Nav Element Major blocks Screen readers &amp; search engines UL or A See the Pen ZXoMmO by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe role of the nav element is to identify major blocks of navigation. This is an important distinction because it means that smaller grouping of links should not necessarily receive nav elements. It’s up to you to determine when a grouping of links should be identified as a nav. Generally it’s meant for links that are internal to the website. Most pages have at least some navigation at the top of the page as well as some secondary bottom navigation or maybe some sidebar navigation. Identifying navs in your document can help screen readers as well as search engines understand the role of these set of links better. So, for example screen readers might omit the rendering of this section and search engines might be able to use these to navigate through an entire website. This is a compound tag and inside these people usually have either a list element UL or just a set of links A. Technically, a list element is considered more appropriate for a navigation, but a series of links isn’t uncommon. Article Can stand alone Should have headings Can be nested See the Pen Article Example by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe article element is one of those hard to explain elements. It represents a complete, self-contained composition in a document, page, application or site. These could be things like forum posts, magazine or newspaper articles, blog entries, user-submitted comments, interactive widgets, etc. It should be something that can stand alone on a page. I tend to think of the article element as one of two things, like a literal article that someone writes or as an article of clothing. So if you’re looking at a list of shoes on nike.com, each of the pieces of code describing the shoes could be thought of as an article. Articles should include a heading h1-h6 inside the article tag. You can also nest articles inside other articles (say a list of the types of shoelaces options you can get for the shoes). In the example above, I could have tagged each ‘article’ as an artile, but because it is a grouping of articles and I have a headline that identifies the grouping, it’s fine to use the article tag for the entire grouping. Section Thematic grouping Should have headings Can be nested See the Pen Section Example by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe section element can be as confusing as the article element and it’s description is somewhat generic by nature. It represents a thematic grouping of content. That means that sections are part of a bigger grouping of elements. A page could be split into sections for things like introduction, news items, contact information, etc. If it can stand alone, it should probably be an article, if it a piece that is part of another element, then it can be a section. Main The main thing Nested intelligently See the Pen Main Example by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThankfully, the main element is really easy to figure out. It represents the main content of the body of a document or portion of the document. It consists of content that is directly related to the central topic of, a document or the central functionality of an application. It can be really useful to screen readers and search engines so that they can immediately identify the most important content in your document. You can use multiple elements within the same page when it makes sense to do so, for example if you have another section like a card that has it’s own header and a footer where the main content of the card needs to be identified as the main content of the card. Aside Related content Can appear many times Do not use for pullquotes See the Pen Aside Example by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe HTML aside element represents a portion of a document whose content is indirectly related to the document’s or other element’s main content. They can appear many times within a document whenever there is some related content in an article or section, but it’s also often used for a sidebar on a website. The specifications say that asides shouldn’t be used for things like pullquotes because they are considered to be part of the current element, so use it only for related elements. Div Generic grouping No meaning Class or IDs See the Pen DIV Example by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe DIV tag is what we call a generic block level tag because it’s used to group content, but not pass any sort of meaning to the content. Before things like the article, nav and footer tags existed, the div tag was used to create those elements. Because they have no meaning, it means that it’s often used for layout purposes or when a grouping needs to be made for which there is no existing tag. It’s sort of a measure of last resort. You can add meaning to a div using the class or id attributes. As a matter of fact before the modern semantic tags existed, you assigne the meaning to divs using these. So for example would would create div with a class of nav 12&lt;div class=\"nav\"&gt;&lt;/div&gt; The problem with this approach is that humans weren’t always consistent with their naming conventions, so some people would use a class of nav and others a class of navigation or topnav, etc. Because things got messy, HTML5 introduced consistent elements for commonly used segments of code (nav, aside, header, footer). If you do create groupings using div, you can use the id or class attributes as I mentioned. The main difference between these is that an ID shoud be unique on the page. So if you create an element with an ID of topnav. 12&lt;div id=\"topnav\"&gt;&lt;/div&gt; Then that element shouldn’t exist anywhere else on the current page. Scripts and styles may not work properly when there is more than one element with the same ID. ID’s have one more superpower, you can link to them using anchor tags a. If you need to use the same attribute name, then use a class attribute. Elements can have one or more classnames and more than one element on the page can have the same class name. Links and References Links and References a, img href or src relative, absolute, domain root Web URL Author NotesThe web would not ne possible without links, the entire internet was started because it allowed you create documents that related to each other and the way we do that in HTML is by linking these documents. Web documents allow different types of links and the two most common are anchor links and image links. Each of those have two different attributes to refer to the links. The anchor tag has the href, which means hyperlink reference, whilst the img tag has the src attribute, which stands for source. What’s really important is that you understand the different ways you can refer to an element using links. The href as well as the src attributes allow you to link to documents and images in different ways. It’s useful to think of your website as a folder in a hard drive somewhere. A lot of times, that’s exactly where your files exist. Relative LinksLinks can point to those files relative to the location of your current document. We call that relative links because they are relative to the location of the current file. So, for example, you wnat to create a link to a document called sample01.html in the same folder as the current index.html file you can do it like this. 1&lt;a href=\"sample01.html\"&gt;Sample 01&lt;/a&gt; Let’s say though that you are referring to a document that in a folder that is one level up from the current folder. So, from our portfolio folder, we want to link to an aboutme.html file in a folder above. You can use ../ to back up a folder level. 1&lt;a href=\"../aboutme.html\"&gt;Sample 01&lt;/a&gt; Root Relative LinksThere is another shortcut you can use to refer to a document relative to the domain root by using a / at the beginning of the name. This is useful because sometimes we want to access the same item but it would require different references depending on where we are referencing them from. Let’s say for example that we want to access be able to place our logo.png file on our aboutme.html as well as in our sample01.html page. If we were linking to it from our logo aboutme.html, the reference would be. 1&lt;img src=\"images/logo.png\"&gt; But if we were to link it from our sample01.html file, that file is inside a folder called portfolio and the images folder is one level above that folder. We could refer to it like this. 1&lt;img src=\"../images/logo.png\"&gt; But on a large website, that could be problematic because if we had several subfolder, each subfolder would require a different reference. We could simply refer to it using a root relative reference. 1&lt;img src=\"/finalproject/projects/filestructure/images/logo.png\"&gt; The slash right after the quotation means that we want to create this link from the domain root (in this example case planetoftheweb.github.io). Then would come our repo name (finalproject), then the This one is a little bit dangerous because the domain root means different things to different machines. Most computers have their own document root, so when you use a reference like the one above on your laptop, it assumes you mean that you are looking for a folder from it’s own root folder. We often work on a copy of what’s on our server on our personal machines, so just understand that if you use this type of reference you won’t be able to preview it on your local machine properly. Web URLsAnytime you place documents on the web, they also get an automatic web URL. It begins with your domain URL and in our case involves a series of folders. Because we’re using github pages, our URL will also have our repo name. Assuming our domain is http://planetoftheweb.github.io and you have a repo there called filestructure and inside that you have the folder structure illustrated above, then we could link to our aboutus.html page like this. 1&lt;a href=\"http://planetoftheweb.github.io/filestructure/projects/finalproject/aboutme.html\"&gt;About Me&lt;/a&gt; Default DocumentIf you name a page index.html, then it becomes the folder default for that folder. That means that if you’re referring to that file, you can omit the index.html part in the link. So if we wanted to just link to our finalproject/index.html file with a web URL, we could do that like this: 1&lt;a href=\"http://planetoftheweb.github.io/filestructure/projects/finalproject\"&gt;Final Project&lt;/a&gt;"},{"title":"","date":"2018-01-30T21:45:09.890Z","updated":"2018-01-30T21:45:09.000Z","comments":true,"path":"slides/04_basic_css.html","permalink":"http://yoursite.com/fid/slides/04_basic_css.html","excerpt":"","text":"Author Notes Page Styles Default styles Browsers differ Override with stylesheet Not guaranteed Author NotesSo far, we’ve been creating pages without using stylesheets and while it may seem like we’re creating sites without any styles and that’s really not the case at all. Every browser has a default set of styles called the user agent stylesheet (aka Default Browser Styles) that are in charge of how a page looks when it doesn’t have any other styles. So it makes things like control the basic differences between the sizes of H1 and H3 tags and the spacing after paragraphs. Each browser has it’s own version of this default stylesheets and although they’re pretty similar, they can have some major differences like the default font used. So when you create your own stylesheets, you’re not starting from scratch. You’re removing, revising or overriding existing sytles. You’re building on top of a framework of existing rules. On top of that, a user or browser can override certain defaults like the size of your font if you want to make things more readable and you have no control over that. Designing for the web is unlike anything else you can do. You can’t assume that a font is going to be a specific size or control the proportion or orientation of the page. Welcome to responsive design. Adding CSS To A Page Three options style=&quot;CSS&quot; attribute &lt;style&gt;CSS&lt;/style&gt; tags &lt;link&gt; tag in head Author NotesOnce you decide you want to add styles to your page, you have one of three options. each of these has advantages and disadvantages. First, you can add styles directly to an existing HTML tag like the paragraph or anchor tag as an attribute. This is the most direct and deliberate way of adding css. Second, you can add styles to a page using a tag called &lt;style&gt;. The style tag works like the paragraph or any other tag. It’s a container tag so it has a beginning and ending part &lt;/style&gt;. You simply put any CSS you want to affect the current page in between these style tags. Third, you can ask that the page look for a separate style document and load it into the current page. This means that you can easily add the same sheet to multiple pages and is the preferred method of writing styles for an entire website. You should add this in the &lt;head&gt; section of the document because it’s where you place things that you want the browser to know before you display the page. Inline Styles Property:Value; rules Only THAT tag Most specific See the Pen Inline Style Sample by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesOne way to add CSS to a stylesheet is to use the style attribute. This works like any other tag attribute like the href on an a (anchor) tag or a src attribute or an img tag, but the difference is that inside this style attribute, you can modify how that individual tag is displayed. The problem with using the style attribute is that it only affects one instance of that tag. That means that in the sample above, no other strong tag would be affected on the page. The style attribute is also the most specific, so that if other styles exist that apply to this element, the style attribute will override them. This is a horrible way to add styles to your document because of these last two points. If you have 40 tags you want to control, using the style attribute would mean you’d have 40 style attributes and 40 places to update things in the future. You might be asking yourself why would anyone use this? Well, style attributes are often used by javascript to dynamically add and delete styles to a page. For example, it would be easy to toggle the visibility of a section of code by using javascript to turn it on or off. Embedded Stylesheets &lt;style&gt;&lt;/style&gt; in &lt;head&gt; Requires a selector Whitespace for readability See the Pen Style Tags Sample by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesAnother way to create stylesheets is to embed them into the current document in their own section using the &lt;style&gt;&lt;/style&gt; tags. The style tags will let you write CSS that affects the current page. That’s why most of the time they go in the &lt;head&gt; section of your page. That’s where you want to put things that you want the browser to know BEFORE it starts showing any of the page to a user. When you use the style attribute, you are targetting a specific tag, but when you use the style tags, you are targetting the whole document. Therefore, using the style tag means that you’ll have to use a selector in order to specify what part of the document you’re targeting. The rules are then place inside a set of curly braces {} The easiest selectors to learn are called type selectors and are simply the name of the tag you’re targeting. So, for example, if you wanted to target all of the paragraphs, the selector would simply be p. 1p &#123; color: red; font-size: 200%; &#125; Just like HTML, use whitespace and tabs for readability. Each declaration can be written on a separate line, and tapped in the visually see which styles belong within each declaration block. External Stylesheets1&lt;link rel=\"stylesheet\" href=\"FILENAME\"&gt; Use the &lt;link&gt; tag Do NOT use &lt;style&gt; Least Specific Author NotesThe final way to add styles to your page and the most common is to link to an external stylesheet using the &lt;link&gt; tag. The link tag allows you to use the same style sheet in several pages. The link tag is used DO NOT use the &lt;style&gt; tag inside your external stylesheets. It’s a common mistake. CSS is a language that is slightly different than HTML and the only thing that goes in an external document should be CSS. The &lt;style&gt; tag is an HTML tag and shouldn’t go in a CSS document. An external CSS file is the least specific of all the ways to add CSS, so if there are &lt;style&gt; tags or style attributes on the page, they’ll override what’s on your external stylesheets. External Stylesheet Syntax1234selector &#123; property: value; property: value;&#125; Selectors use {} Properties/value declarations Declarations separated by ; Author Notes:Let’s take a look at the structure of an style definition. In a typical style definition, you use a selector to indicate what element you want to style, you then add as many style declarations as needed using curly braces. If you’re using the style attribute inside a tag, it’s obvious that you want to change the current tag, so you don’t need to specify a selector. To modify a style, you specify a set of properties and values. Properties are what you want to change and the values are what you want to change those to. Together, a property value pair makes something called a declaration. Multiple declarations are separated by semicolons, and you can create declarations in any order and whitespace is not really important, so use it for formatting and clarity. ExerciseLink an HTML document to an External CSS file Class and ID selectors .class selector #id selector See the Pen Class &amp; ID Sample by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesIn addition to selecting an HTML tag using the name of the tag, you can target any element that has a class associated with it using a class selector. That’s the name of the class preceded by a period. In the same way, you can target an element that has an ID by using a hashtag before the ID name. Descendant Selector Targets child element Use a space See the Pen Aside Example by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe descendant selector is part of a group of combinators that allows you to target an element only if it’s inside another element. You target a descendant by leaving a space between the two. Multiple Selector One rule for many Use commas See the Pen Multiple Selectors by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesYou can apply the same rules to multiple items using the multiple selector operator, which is really just a comma , character. This is a great way to do something to a variety of selectors like creating some basic styles for all of the Headlines. Pseudo Classes Select an element State or Property Single colon : 1:hover, :focus, :first-child, :nth-child, :not Author NotesA pseudo-class is way of selecting an existing HTML element…that’s really important because that’s main difference between classes an elements It selects that element based on either a state or a property of the element. Pseudo classes are related to to an existing element using a single colon character. Some common pseudo elements are :hover which let’s you modify an element when you hover over it. You’ll also notice I’ve listed here :first-child and nth-child…two ways you can choose an element in a group based on their position. Pseudo Elements Virtual elements One or two colons? 1::before, ::after, ::first-letter Author Notes: The main difference between a pseudo class and a pseudo element is that pseudo elements don’t actually select an element, but create a sort of virtual element that didn’t exist before. You can target that virtual element and then you can style it appropriately. CSS3 rolled out the use to two colons instead of one colons to differentiate pseudo elements from pseudo classes, but because older browsers do not support the double colons, it’s ok most of the time to use a single colon instead. You can see some of the common pseudo elements here. They are a lot more scarce than pseudo classes. One good way to figure these out is to compare the difference between :first child and ::first-letter. They may seem like they’re very similar, but first-child selects the first element that is a child of an element. So the target of the style is an actual element, where ::first letter lets you pick an non-existing position inside an element…the first letter of some element. Let’s take a look at an example: Pseudo ExampleSee the Pen Pseudo Class &amp; Elements by Ray Villalobos (@planetoftheweb) on CodePen. Colors Named, Hex rgb(a), hsl(a) color, background color Author NotesThere are many ways of specifying colors in CSS. You’ve already seen the use of named colors. The problem with named colors is that they are imprecise, so, for example the blue color is really bright and probably not a color you’d want to use often. Another way to specify colors is through the use of hexadecimal values. Those are values specified using two characters from 00-FF. This is called base 16 and is a shortcut for rgb values where 00 is black and FF is 256 in each of the Red, Green and Blue channels. It’s the oldest color model and handy, but hard to understand. There two other less common ways to specify colors using each of the rgb (red, green and blue) channels and a newer hsl (hue, saturation, lightness) mode. The red, green and blue colors are more directly related to the way human beings see as well as what monitors are able to display, but it’s difficult to manipulate colors because working with them is not straightforward. The hsl color mode is a little bit easier to work with because hue is essentially the base color and by adjusting the saturation, you can modify how neutral grey or bright that color appears. The l parameter stands for lightness, so you can make a color lighter by adjusting this value. A great place to go look for color combinations is the Adobe Color website. The main place where you can control color is the color property, which affects text and the background-color property, which affects the backgrounds of elements. ExercisePlay with colors on your site Fonts on websites1font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", sans-serif; font-family Platform defaults Quoted, serif, sans-serif Author NotesFonts in CSS are specified via the font-family property. You can specify fonts by simply using the font name. If the font exists in the user’s computer, then it will display properly. If it doesn’t exist in that computer, you can provide alternatives by using commas to determine which fonts will be displayed in order. Every platform has their own default fonts they can use. For example, one of the Apple system default fonts is called San Francisco, but that also depends on the browser and platform. Therefore, you can’t assume that a user is seeing the same fonts as you…chances are they are not. Users can also change override the zoom as well as the size of elements. When you want to use a font that has a space in the name, you’ll need to use quotation marks to make sure it works properly. There are two special names you can use called serif and sans-serif as well as monospace. It allows you to specify the browser’s default font…whatever it is and should be used at the end of any font specification. Font Properties font-size, font-weight line-height font Author NotesHere are the most common font properties. There are so many of them that it’s hard to try to put them all here. They are pretty obvious to work with. Most of them are under the font prefix, but some are not. For example the line-height property affects something in typography we call leading. There’s also a very powerful font property which allows you to control a multitude of other properties in a single place. Text Sizing in CSS Pixels and Accessibility Rems &amp; Ems More Flexible Default Sizes Matter Rems vs Ems Author NotesPixels are the traditional way to size typography on the web, but in some older versions of IE, pixels are not resizable. That’s an accessibility issue if someone doesn’t have good eyesight and needs to make fonts bigger on your page. Ems are Rems are relative sizes, which means that you can base the size of elements on other elements. That makes sizing with pixels less flexible. If you want to change the size of a group of elements, it’s harder with pixels because you would have to issue sizing instructions for every element within a component. If you want to use relative font sizes, the important thing to remember is that every browser has a default font size…in most cases, that’s 16 pixels. You can change that default to something else if you want to and that affects how you use ems and rems. Once you know your default font size, rems are always relative to the root font size. So 1rem is equal to 16 pixels…unless you’ve changed that default font size. Ems, in contrast are sized relative to their parent containers and it’s the height of the font unit. Google Web Fonts12345@import url('https://fonts.googleapis.com/css?family=Rammetto+One');h1 &#123; font-family: \"Rammetto One\", sans-serif;&#125; Hundredths of Fonts Load only what’s needed Issues with Validation Author NotesThe easiest way to add custom fonts to your websites is to use Google web fonts. There are currently 848 styles you can add to your site for free. Make sure when you use Google Web Fonts, that you use only what you need because the more fonts you add to a page, the longer it will take to load. You can easily add fonts by using this site. Choose fonts by hitting the plus sign. When you’re ready to add them to to your site, simply hit the popup that appears at the bottom of the page. Click on the embed type. There are some issues with validation and the standard import, so I would suggest that you use the @import rule. You can then use these fonts in your pages just like you would specify any regular font. Remember that if the font has a space in the name, put it in quotes in your css rule. Also, remember to include some backups. Even using Google Web fonts you can’t guarantee that the user will see what you’re specifying. Their web connection might go down. ExerciseLoad Custom Google Fonts Basic Display Property Very rich property block, inline, inline-block, none inline – no width, height Author NotesThere is a very rich display property in CSS that lets you control how element’s spacing and layout is controlled on the page. We’ll cover the basics this week. All elements are initialized as having one of these display properties by default and they are usually considered to be either a block element or an inline element. The main difference is that inline element have no width or height by default. You can control some of the spacing and border in elements and you can control the width and height of some elements depending on their display property. Author Notes Sizing Elements padding margin border top, right, bottom, left Author NotesAs you can see from the graphic, we can control several things about the elements. The main are the padding, margin and border. The margin property has an interesting property in that vertical margins collapse, so if you have a headline and a paragraph and the headline has a margin at the bottom of 15px, but the paragraph has a margin at the top of 10px, the 10px margin will fold into the 15px margin and the total amount of room in between the two will be 15px. You also have individual control over each of the dimensions top, right, bottom and left. ExercisePractice basic display"},{"title":"","date":"2018-02-06T21:20:44.747Z","updated":"2018-02-06T21:20:44.747Z","comments":true,"path":"slides/05_intermediate_css.html","permalink":"http://yoursite.com/fid/slides/05_intermediate_css.html","excerpt":"","text":"Author Notes By default, the width and height you assign to an element is applied only to the element’s content. Border and Padding are added to this, therefore if you specify that an element needs to be 300 pixels wide, but then you add 10 pixel padding all around, the box ends up being 320 pixels. That’s not really great for layout and it’s not the way you think about sizes, so CSS has a propety called box-sizing that lets you redefine the way this works. Box Sizing box sizing info content-box default border-box more natural See the Pen Box Model Sample by Ray Villalobos (@planetoftheweb) on CodePen. Author Notes123456html &#123; box-sizing: border-box;&#125;*, *:before, *:after &#123; box-sizing: inherit;&#125; A good way to combat against this is to use the code above, it establishes the box model as border-box in the topmost element (html) and then asks every other element on the page to inherit that value. Inline Block Issues inline vs block properties inline-block measurements Spaces matter See the Pen Inline Block Spaces by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe two main display value are inline elements and block elements. The main difference between these elements is that block elements have spacing before and after them and that you can specify an elements width and height on block elements, but not on inline elements. The inline-block element was designed so that is displays inline, but you can specify the width and the height, so it’s a pretty useful element, but there is one problem. When you add a carriage return in between inline-block elements, it displays a space in between these elements, so in some instances, you may want to make sure that there is no carriage return or spaces between these elements so they display properly. Although inline-block can be a quick solution to create certain layouts, it’s not the best way to lay elements out on a page, there are much better ways to do things, but it’s important that you undertand this particular issue with inline-block because it can cause headaches. Resetting Font Sizes Trick ems vs rems Compounding issue root html size font size See the Pen Relative Font Sizes by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesLet’s review the two major relative typography measurements again. ems are relative to a parent element. The problem with this is that it can cause a compounding issue. So if you have an element where you set the font size to 2 ems and then have another element inside that and set the size to 2ems, that inside element will now be four ems. If you’re doing that a lot it can be confusing to size things. Rems, on the other hand are always relative to the root font size, which is usually in the body. The root font size is usually set to 16px in all browsers. Using rems, you can always base the size of any element on that size. So if you want to set the size of an element to 32px, you can use 2rem as the value. The root font size of 16px doesn’t always lend itself to easy mathematical calculations, so one technique is to set the root font size to 62.5% in the body. That means that the root font size will now be 10 pixels. That makes it easier to visualize your sizes, because if you want to make something 28 pixels, you can set that to 2.8rem anywhere on the page. https://snook.ca/archives/html_and_css/font-size-with-rem Vendor Prefixes Browser Support World Wide Web Consortium (W3C) Vendor Prefixes Do I use See the Pen Compatible gradient by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesCSS is a living language, therefore not all versions of browsers support all features. For the most part everything we’ve covered so far has excellent support even in pretty old browsers. However, some of the techniques we’ll be learning about soon are not always supported in older browsers. Different companies establish a baseline of support for which browsers and versions they want to support. So, for example, older government entities might require that you run your site so that it’s compatible with an older version of Internet Explorer. As you’ll see as new features are proposed, they go through a rigorous testing and approval procedure by the W3C. However, this process can take years. Some browsers may start to support features even before they are officially approved. Because the definitions of how things work may change, the implementation by some browsers will change over time. A good example of this is the definition for notifications in CSS. It’s an attempt to be able to define notification messages outside of a web page. Current brower support is very sketchy right now. No versions of Internet explorer support that, so that is a feature you shouldn’t depend on for your sites if IE support is required at your company. A great place to check for browser support is the caniuse website. It not only shows you which browsers support, but also usage information (percentage of the web that uses this browser version) so that you can make a decision on wether your company should support this feature. These usage tables are guidelines, however, and your company will make those decisions on usage. As features are being developed, browsers will often release an early implementation of those features under their own browser prefixes. The flexbox feature is a great example of this. When that happen, the browsers will use something called a browser prefix like -moz (firefox), -webkit (safari, chrome), -ms (internet explorer), -o (opera) so that when the feature is released their own versions won’t compete with the final version of the feature. When browsers implement their own versions of experimental features, it can sometimes create issues because in order to support both old and new browsers, you end up with multiple ways of writing the same feature. Take gradients, an example we’ll be looking at this week. They are not supported in IE until version 10, however in version 5 of safari, they were implemented, but with a different nomenclature. So in order to support gradients in as many older browsers as possible we would need to write something like the example above. Clearly, it’s not fun to write css that is backwards compatible with older browsers. There’s a couple of ways around that. One is to use a processor for your CSS that takes care of writing the vendor prefix code for you. That is an advanced feature that we won’t be covering in this class. Another is to use a javascript library like prefix-free that will automatically add the prefixes to your code at runtime. This ends up slowing your site slightly and it’s not optimal, but it’s easy to do. If you want to use prefix-free from a CDN, you can add this to your code before the closing body tag (&lt;/body&gt;) 1&lt;script src=\"https://cdn.jsdelivr.net/npm/prefixfree/prefixfree.js\"&gt;&lt;/script&gt; In this class, you can assume that I’ll be using the latest version of Google Chrome, so you won’t need to worry about prefixes unless you want to use a bleeding edge feature of CSS. Gradients on background or background-image linear-gradient or radial-gradient Gradients and readability See the Pen Sample Gradients by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesCSS allows you to define gradients with a powerful set of declarations. These declarations can be insered into the background or the background image attributes. Generally, the background property is more flexible and allows you to create more flexible gradients. There are two main options for creating gradients…linear or radial gradients. They are pretty self explanatory, so check out the code above for examples of how to build gradients. You can also check out this CSS3 Patterns Gallery to see some advanced examples. Gradients as a design element have fallen out of favor in recent years with the rise of flat design on the web, so make sure you use gradients sparsely and that you never sacrifice legibility over gradient or background use. One real valid use of gradients is to create an image overlay (see sample code) that can help you create text overlays when you place text on top of an image by darkening or changing the color of an image. Advanced Backgrounds Rich background property background-image, background-repeat, background-position, background-attachment, background-size Compatibility concerns See the Pen Full Screen Background Image by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe background property is a super rich property full of features. In addition to being used for gradients, it can also be used to place an image as the background of an element. That’s pretty useful in CSS and there are a lot of controls over how the image is placed and behaves inside that element. You can see an example of each of the properties above. You can control the position of the background, so that you can make the image align to the center, top or bottom. This can also be specified in percentages. Small backgrounds repeat by default, so you can control how this repetition happens with CSS and ask for either horizontal, vertical repetition or no repetition. Another common property is the background attachment property, which lets you control how the background moves in relationship to the scroll. Although fixed is a popular property, this doesn’t translate well to mobile devices, so be careful when relying on this and test on your target platforms. You can also control a property called background-size, which lets you define a background that proportionally resizes to the dimensions of the viewport. Be careful when placing text on top of an image because sometimes the image can fight with the readability of the text. In those instances, it’s useful to put a mild gradient on top of the image to perhaps darken the image and make the text easier to read. This is a great place to use sizes like vw and vh and the weird, but useful v-min font sizes, which give you proportional font sizes related to the viewports. Rounded Edges border-radius px/percentages x/y trbl Don’t overuse See the Pen border-radius by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe rounded edges properties allows you to modify the edges of elements so that they have a round edge. There’s a lot of interesting effects that you can achieve with this. You can control the overall size of the radius with either pixel units or percentages and invididually control which edges are rounded. Shadows box-shadow text-shadow Don’t overuse See the Pen shadows by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesShadows can be an effective way to separate an element from their background. There are two types. The primary way of working with shadows is to use the box shadow property which lets you specify the distance of the shadow from an element in x and y positions as well as the softness of the shadow. If you want to add shadows to text, you can use the text-shadow property instead. It works pretty much the same way as the box-shadow. Just like with rounded edges please don’t overuse these features. Use these for clarity and avoid using them when it makes your/ design look too busy. Icons Easy to add Font Awesome Add your own icon See the Pen icons by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesIcons are a great way to spice up your designs and are very popular on the web. You can use an existing library or create your own. One of the most popular icon libraries is called font awesome. You can use a version which includes 929 free icons and there are lots of other libraries you can use on the web. You can add your own icons with some simple code (see example). SVGs are always better because they are clearer. Make sure that the icons are visible and simple. Not everything works as an icon. Debugging CSS Inpect/Elements Styles/Computed/Console Copying code Author NotesIcons are a great way to spice up your designs and are very popular on the web. You can use an existing library or create your own. In addition to using a good linter like csslint.net, you need to learn how to debug CSS using your browser. Although most browsers have their own ways of doing this, Google Chrome is the most popular tool that developers use to debug code. In there you have the option of analyzing not just your HTML, but also your CSS. To get to it, right click on any element and then choose inspect from the popup. Make sure you’re in the elements tab to see the HTML next to the CSS that is in use to display this page. Your three most powerful tools for debugging are the styles tab, which shows you the styles that are applied to your page in the order they are applied. The computed tab, which shows you the final state of the elements after all of the styles have been applied and the console tab, which shows you any errors on the page. You can override or test styles by using the element.style section. This is the same as using the style attribute in HTML, so it is the most specific. If you pull up your page and you see a red checkbox on the right, the page has errors, by using the console tab, you can see if there are any missing documents or files that are not loaded correctly. ExercisePractice Debugging You CSS Graphic Formats Feature GIF JPG PNG SVG Type bitmap bitmap bitmap vector container Animation yes none none programatic Max Colors 256 16-bit 32-bit n/a Transparency 1-bit none 8-bit programatic Compression none lossy lossless n/a Use animated GIF Photos Rich Lossless Transparency Programmable Vectors Author NotesOn the web, there are four graphics formats you should use: GIF, JPG, PNG and SVG. Which one you use depends on what you’re trying to do. GIFGIF is by far the oldest of the formats and should rarely be used on web projects because of it’s many limitations. First, it can only store a maximum of 256 colors, so it’s not very good for images. Although it does allow you to use transparency, it’s not the best format for that since it only allows 1 of the colors to be transparent. It is not a compressed format, although you can make a GIF file smaller by limiting the amount of colors to an even shorter palette. The only thing this format has going for it is that it is the only bitmap format that allows for animations. This is why it’s still popular today, but it’s hardly something you should be doing on websites. JPGNext is JPG or JPEG. It’s a format designed for photographic images. JPG is smart about the information it stores because it understands how people see color. Most people have four types of sensors that allow them to see images. Rod shaped sensors, which allow you to detect grayscale values in light are the most common and appear at a 50-1 ratio compare to the rest. Cone shaped sensors appear in three different colors: red, green and blue. Because of this, humans are much more sensitive to grayscale information than they are to color information. The JPG format understands this and therefore it separates the color information from the grayscale information and uses different compression methods to make the images much smaller applying more compression in the color and less in the grayscale. Because JPG changes the original pixels in the image to do this, it’s called a lossy compression format, which means that you lose quality when you use this method of compression. Photos look pretty good with JPG compression and they are significantly smaller than with other formats. PNGThis format was designed after it was discovered that the GIF format was proprietary and belonged to certain companies. It offers a lot more detail and can store much more color information than JPG. So it’s capable of storing a lot more fidelity than the JPG format. In addition, it’s compression is not lossy, so you will not lose quality when saving in the PNG format. Alas, the compression doesn’t produce images which are as small as JPEG so JPG is still the best option for photos. PNG is really good for bitmaps and has one feature that makes it ideal for certain tasks and that’s it’s ability to have soft trasnparency. SVGScalable Vector Graphics are the only format that store information as vectors. It is technically a container format, so you can store files in other formats inside an SVG file. Vectors allow you to store mathematical shapes instead of pixels. One huge advantage with SVG is that you can program those shapes using JavaScript and also style them with CSS. The CSS you use for styling SVGs is slightly different than traditional CSS, so it’s easy to learn. You should use SVGs whenever possible if you have vector data. You can use Photoshop to export in any format except for SVGs. You can use Illustrator to export vectors as SVGs. Sizing Images Resize to &lt;1500px Horizontal Orientation Create thumbnails Author NotesAny image you take with a camera or your phone usually has way more information than you need for a website. Professional cameras can easily be in the 20 megapixel range, but even a 2 megapixel photo at 1920 pixels in width is a lot more than what you’ll need for a website. So it’s important that you crop and resize your images to make them fit into a website. For most photos you don’t really need anything bigger than maybe 1500 pixels wide and maybe 1000 pixels tall, anything more than that is overkill. Because most monitors display horizontal aspect ratios, sites are designed with those proportions in mind, so you should, for the most part shoot your images in landscape mode. It’s important that for larger images, you provide a thumbnail image that points to a higher resolution version of the image. I would suggest that you try to crop thumbnails to the same size (it’s common to have large wide thumbnails these days) and that you crop them to show a piece of the image, not the entire image. ExerciseCreate thumbnails"}],"posts":[{"title":"Create a Page Using Intermediate CSS","slug":"intermediate-css","date":"2018-02-06T05:00:00.000Z","updated":"2018-02-06T21:49:50.067Z","comments":true,"path":"assignments/intermediate-css/","link":"","permalink":"http://yoursite.com/fid/assignments/intermediate-css/","excerpt":"Create a project that uses intermediate CSS features. Launch Presentation | Slide Notes","text":"Create a project that uses intermediate CSS features. Launch Presentation | Slide Notes Read Thesebox-sizing, properties, root html size, background, background-image, linear-gradient, radial-gradient, background-repeat, background-position, background-attachment, background-size, border-radius, box-shadow, text-shadow Watch TheseFluid TypographyResponsive TypographySVGRaster and Vector GraphicsBrowser Development ToolsDebugging CSSIcon FontsBackground PropertyGradients General Expectations Use a Github repo and place this inside a projects folder under it’s own folder Use any of the styles on this page and any previous styles, but no others You may use a copy of the previous HTML project You must use external style sheets ONLY All HTML must validate using the w3c validator (-50 points) All CSS must validate using the csslint (-30 points) Links to your project must work (-50 points) Lesson Expectations You must use a background image using the vh measurement You must use some thumbnails on a page Images must be resized and compressed You must use the inline-block parameter in a meaningful way You must use border-radius somewhere You must use border-box sizing You must use a drop shadow tastefully You must use rems to size your typography You must resize your root font size to 10 pixels You must use use a gradient tastefully You must use rounded edges somewhere on your stylesheet You must use icons","categories":[{"name":"assignments","slug":"assignments","permalink":"http://yoursite.com/fid/categories/assignments/"}],"tags":[{"name":"css","slug":"css","permalink":"http://yoursite.com/fid/tags/css/"},{"name":"week 05","slug":"week-05","permalink":"http://yoursite.com/fid/tags/week-05/"}]},{"title":"Create a Page Using Basic CSS","slug":"basic-css","date":"2018-01-30T05:00:00.000Z","updated":"2018-02-06T21:50:25.678Z","comments":true,"path":"assignments/basic-css/","link":"","permalink":"http://yoursite.com/fid/assignments/basic-css/","excerpt":"Create a project with at least two web pages that link to one another and contain HTML structural tags. For this project, you should start thinking about what your final site will be like. Because this is a new version of this class, I will not accept portfolio projects for the final project. You should try to build a robust website…like the clas website, and it would be a good idea to start working towards that. Launch Presentation | Slide Notes","text":"Create a project with at least two web pages that link to one another and contain HTML structural tags. For this project, you should start thinking about what your final site will be like. Because this is a new version of this class, I will not accept portfolio projects for the final project. You should try to build a robust website…like the clas website, and it would be a good idea to start working towards that. Launch Presentation | Slide Notes Read These&lt;style&gt;, &lt;link&gt;, Watch TheseDefault Browser Styles, Inline, Internal and external CSS, CSS Syntax, Type, Class and ID selectors, Pseudo Class Selectors, RGB, Hex and Keyword Color Values, Cascading Inheritance and Specificity, Web Fonts, Font Size Property, Font Style, Font Weight, Color, line-height and text Expectations Use a Github repo and place this inside a projects folder under it’s own folder Use any of the styles on this page, but no others You may use a copy of the previous HTML project Use external style sheets ONLY At least 10 css rules You must load at least one custom web font from Google Web Fonts and apply it. (-30 points) All HTML must validate using the w3c validator (-30 points) All CSS must validate using the csslint (-30 points)","categories":[{"name":"assignments","slug":"assignments","permalink":"http://yoursite.com/fid/categories/assignments/"}],"tags":[{"name":"css","slug":"css","permalink":"http://yoursite.com/fid/tags/css/"},{"name":"week 04","slug":"week-04","permalink":"http://yoursite.com/fid/tags/week-04/"}]},{"title":"HTML Pages with Structural Tags","slug":"structural-html","date":"2018-01-23T05:00:00.000Z","updated":"2018-02-06T21:50:35.568Z","comments":true,"path":"assignments/structural-html/","link":"","permalink":"http://yoursite.com/fid/assignments/structural-html/","excerpt":"Create a project with at least two web pages that link to one another and contain HTML structural tags. For this project, you should start thinking about what your final site will be like. Because this is a new version of this class, I will not accept portfolio projects for the final project. You should try to build a robust website…like the class website, and it would be a good idea to start working towards that. Launch Presentation | Slide Notes","text":"Create a project with at least two web pages that link to one another and contain HTML structural tags. For this project, you should start thinking about what your final site will be like. Because this is a new version of this class, I will not accept portfolio projects for the final project. You should try to build a robust website…like the class website, and it would be a good idea to start working towards that. Launch Presentation | Slide Notes Read TheseHeader, Footer, Nav, Article, Section, Main, Aside, Div, a, img Watch TheseThe Value of Structure, Controlling Document Outlines , Nav, Article, Section, Other semantic elements, Aside, Div, Anchor Expectations Use a Github repo and place this inside a projects folder under it’s own folder Create at least two pages Include at least two images in your project Links to your pages and images must work in all pages and sub-pages Use each of the structural tags at least once: &lt;Header&gt;, &lt;Footer&gt;, &lt;Nav&gt;, &lt;Article&gt;, &lt;Section&gt;, &lt;Main&gt;, &lt;Aside&gt;, &lt;Div&gt;, &lt;a&gt;, &lt;img&gt; in a meaningful and significant way. Does this project reflect the topic of your final project? Use the w3c validator and make sure your the URL to your Github Pages validate","categories":[{"name":"assignments","slug":"assignments","permalink":"http://yoursite.com/fid/categories/assignments/"}],"tags":[{"name":"html","slug":"html","permalink":"http://yoursite.com/fid/tags/html/"},{"name":"week 03","slug":"week-03","permalink":"http://yoursite.com/fid/tags/week-03/"}]},{"title":"Create a Valid HTML Page","slug":"valid-html","date":"2018-01-16T05:00:00.000Z","updated":"2018-02-06T21:50:43.161Z","comments":true,"path":"assignments/valid-html/","link":"","permalink":"http://yoursite.com/fid/assignments/valid-html/","excerpt":"Create a single page document for your website with basic information for your portfolio. Launch Presentation | Slide Notes","text":"Create a single page document for your website with basic information for your portfolio. Launch Presentation | Slide Notes Watch theseThe importance of HTML, Basic HTML Syntax, Exploring an HTML document structure, Formatting content with HTML, The Value of Structure, Creating links, Inserting images, Unordered lists Turning in your project On your desktop, create a folder called projects Inside that folder, create a subfolder called validhtml Inside that folder, create a file called index.html Use this basic html template to get your page started Inside the body section of the document write some text with a basic portfolio Upload the folder to your github repo (drag and drop it onto your repository) Use the w3c validator and make sure your the URL to your project’s Github pages validate. Sections for resumeA short paragraph with a welcome message plus 4-6 sentences that include a short bio about yourself (see the example bio on my LinkedIn Learning page. SkillsAn unordered list of your skills. These would be something other than software skills. In LinkedIn, they appear in the Featured Skills and endorsements. For example the top skills on my LinkedIn profile are listed as: User Interface Design, User Experience, Web Development, CSS, JavaScript, etc. Please list at least ten skills…think of the skills you’ll be learning in this or other classes this semester. Software/HardwareThis is a list of the software and hardware you’re comfortable with. Don’t use specific version of software. If possible, try to make it specific to your career. If you’re going into graphic design, then perhaps Photoshop and InDesign might be something you’d list, for 3-D animation, perhaps Maya and for video, After Effects. At least five. Social Media/WebA list of links to your public social media profiles or other websites where people can find you; things like LinkedIn, Twitter, Youtube, etc. At the very least, you should link to your website address, and your github repo. If you’re a graphic designer, perhaps a link to Beehance. Work SamplesThese will be images to samples of previous work. If you’ve done some work for other classes, these will be a great place for them. If you don’t already have them online, upload them to your server like you did the photos and create links for them. At least 5 images. Expectations Use headlines (H1-H6) for headings Use paragraph tags for paragraphs Use br tags, but ONLY for breaking up single lines of text. DO NOT use this for formatting your document or adding extra vertical spacing. Convert text links to URLs using the anchor tag Convert links to work samples to images using the img tag. Use ordered and unordered lists where necessary. Use the strong tag to give strong importance to text. DO NOT use any tags not mentioned in this list. DO NOT use anything that will format or style the document in any way.","categories":[{"name":"assignments","slug":"assignments","permalink":"http://yoursite.com/fid/categories/assignments/"}],"tags":[{"name":"html","slug":"html","permalink":"http://yoursite.com/fid/tags/html/"},{"name":"week 02","slug":"week-02","permalink":"http://yoursite.com/fid/tags/week-02/"}]},{"title":"Create a Github Repository and Site","slug":"github-site","date":"2018-01-09T05:00:00.000Z","updated":"2018-02-06T21:51:05.525Z","comments":true,"path":"assignments/github-site/","link":"","permalink":"http://yoursite.com/fid/assignments/github-site/","excerpt":"For this assignment, you’ll simply create a Github Account and create your first Github issue in the class repo","text":"For this assignment, you’ll simply create a Github Account and create your first Github issue in the class repo Class Resources Slides Notes Online Resources Creating a new Repository Creating an Issue in Github Configuring Github Pages markdown syntax Information for Github IssueIn the issue you will include the following: A link to your public class Github Repository A link to your Github Pages site. A one or two sentence answer to each of the following questions (pretend you’re interviewing for a job in my company) What experience do you have building websites? What software experience do you currently have? What are some of your strongest soft skills (read this)? Where do you see yourself working after you complete your studies? Submitting the IssueCreate a README.md file on your site (help with markdown syntax). You’re welcome to use the same info in the issues or keep it simpler. Remember that Github as well as this class repo is a public website, so the issues will be public. You don’t have to put your name on these. You will submit a link to your Github Issue in canvas to complete this assignment.","categories":[{"name":"assignments","slug":"assignments","permalink":"http://yoursite.com/fid/categories/assignments/"}],"tags":[{"name":"github","slug":"github","permalink":"http://yoursite.com/fid/tags/github/"},{"name":"week 01","slug":"week-01","permalink":"http://yoursite.com/fid/tags/week-01/"}]},{"title":"Create a Lynda.com Account","slug":"lynda-com","date":"2018-01-09T05:00:00.000Z","updated":"2018-01-15T23:29:41.634Z","comments":true,"path":"assignments/lynda-com/","link":"","permalink":"http://yoursite.com/fid/assignments/lynda-com/","excerpt":"For this assignment you will create an account for lynda.com. It’s not a free account, but you can find it at some public libraries for free. Go to your public library and ask for a special code to receive a lynda.com account. They will give you further instructions to set this up.","text":"For this assignment you will create an account for lynda.com. It’s not a free account, but you can find it at some public libraries for free. Go to your public library and ask for a special code to receive a lynda.com account. They will give you further instructions to set this up. Seminole Library Osceola Library Orange Library Volusia Library Veterans How to use Lynda.com To submit this assignment, send me a screenshot of the lynda.com website once you’ve created and set up your lynda.com account. I should be able to see your name or account on the upper right hand site of the screenshot. Videos Taking a Screenshot on a PC Taking a Screenshot on a Mac","categories":[{"name":"assignments","slug":"assignments","permalink":"http://yoursite.com/fid/categories/assignments/"}],"tags":[{"name":"week 01","slug":"week-01","permalink":"http://yoursite.com/fid/tags/week-01/"},{"name":"lynda","slug":"lynda","permalink":"http://yoursite.com/fid/tags/lynda/"}]}]}