{"meta":{"title":null,"subtitle":null,"description":"This is a website for my class Fundamentals of Interactive Design at Seminole State College.","author":"Ray Villalobos","url":"http://yoursite.com/fid"},"pages":[{"title":"","date":"2018-01-21T23:20:26.285Z","updated":"2018-01-21T23:20:26.285Z","comments":true,"path":"slides/01a_the_internet_and_urls.html","permalink":"http://yoursite.com/fid/slides/01a_the_internet_and_urls.html","excerpt":"","text":"How the internet works Client makes a request to a server. The server routes the request to a service Server sends data back to client Teacher’s NotesBefore we get started, let’s talk a bit about how the internet works. You probably already know generally speaking how it works, but I think it would help to cover more specifically what it’s doing in the background First There’s two types of computers on the internet…clients and servers. Any computer can behave as a client or a server. A client is the computer that makes requests for information to a server. The server has special software installed that sends the request for the information to a service. That’s usually some application that does something with the requests. You could be requesting a webpage, or an email. The server will analyze the request and then send it to the appropriate application to process. Finally, once the server finishes requesting the information, it’s sent back to the client as a webpage, an email, or whatever. Internet Protocols Communication happens through protocols Various server apps handle different protocols http, pop, smtp, ftp, https Author’s NotesOn the internet, communication happens through protocols. If you’ve seen Star Wars you might remember that C3-PO is a protocol droid and that he got hired by Luke’s uncle because he spoke the language of moisture vaporators. The internet is a bit like that, in order to get things done, you have to be able to communicate in different languages. Each service has it’s own language or ‘protocol’. When requests are made to the server, they happen in these different languages. By far, the most common protocol is http. You usually see it typed at the beginning of a web address, but there are others like pop and smtp for mail, ftp for file transfers and https for secure web connections. Uniform Resource Locatorhttps://www.youtube.com/watch?v=MspVCc0_R3g&amp;t=37s#top The initial request/command Author’s NotesYou might be asking how the server knows what to do. The key to that magic is the URL or Uniform Resource Locator. You’re probably used to seeing URLs on the web. They have all the information the server needs to do it’s job. This is a pretty complex looking URL, but it’s divided into several different parts and it’s important that you understand how these work. Note: Sometimes the server will have a shortened version of this without all of the information to make it easier to read. Protocolhttps://www.youtube.com/watch?v=MspVCc0_R3g&amp;t=37s#top Language of the request http vs https Author’s NotesThe first piece of the request is the protocol. This is the main thing the server needs to know, so that it can send the request to the proper service or application. Here, it’s https, because it’s an http request that’s a bit more secure. Most modern sites today use https instead of http because it’s a more secure version in which pages are sent encrypted. Subdomainhttps:// www .youtube.com/watch?v=MspVCc0_R3g&amp;t=37s#top Domain inside domain Helps you divide requests Author’s NotesServers have a lot of ways to divide requests and one of the ways you can do that is by using a sub-domain. A sub-domain allows the same domain to do multiple jobs. It’s like having a website inside another website. You’ve probably noticed that most websites have a www. subdomain, but there can be others, so for example, you can go www.google.com for web searches, images.google.com to do image specific searches or mail.google.com to use your google email. Domainhttps://www. youtube .com/watch?v=MspVCc0_R3g&amp;t=37s#top The location of a service on the internet Converted to IP addresses by DNS Servers IP addresses = Zip Codes DNS Servers = Post Office Author’s NotesThe next part of the URL is what most people associate with a website and it’s called the domain name. Have you ever asked yourself how your browser knows where to find a website? It happens because of the domain name. This name is associated with a series of numbers called IP addresses on the internet. The fact that it is a name is a convenience for humans because it would be too hard to remember all of the numbers everytime we went to a website. An IP address is like a phone number or zip code, it represents the physical location of the server on the internet. The names and numbers are stored through a sub-network inside the internet called DNS or Domain Name Servers. They act as an index or phone book of the names and IP addresses. Think of DNS servers as the Post Office, by reading the zip code, they know the part of the country you live in and can route the mail to the appropriate location. Top Level Domainshttps://www.youtube. com /watch?v=MspVCc0_R3g&amp;t=37s#top Domain type .com, .net, org, .gov, .edu Country specific Monopo.ly Instagr.am Very flexible today Author’s NotesThe next part is the TLD or Top Level Domain. It represents the domain type and is supposed to identify the type of domain that you’re using. The most common types are .com for companies, .net for internet service providers, .org for non-profit entities, .gov for government organizations and .edu for educational organizations. In reality the requirement that the TLDs match function hasn’t been enforced and has been removed. .com is by far the most common and most people will try to use a .com TLD before they use anything else. In addition to that every country as assigned it’s own TLD. Those are usually two letters long, so for example .co is for colombia, .ly is for lybia and .am is for amsterdam. A lot of people use these to make interesting URLs, so for example many tech companies use the .io (British Indian Ocean Territory) TLD for web applications like atom.io. Most of the time country specific TLDs are a bit more expensive. In recent years, the amount of TLDs has exploded into many other categories, which include things like .dad, .biz, .info, .mobi, etc. Port Numberhttps://www.youtube.com :8707 /watch?v=MspVCc0_R3g&amp;t=37s#top A way to divide app requests Request sent through ports Author’s NotesAnother thing you might see on a URL as a way to further divide app requests is something called a port number It follows the TLD and starts with a colon and has a number. Think of this as channels on radio or TV. They allow you to send different types of information on the same domain or subdomain. When you request web pages, they are sent through one of these channels, although most of the time you won’t see these or deal with them. You may see these when setting up FTP, mail or some advanced web projects. Pathhttps://www.youtube.com /watch ?v=MspVCc0_R3g&amp;t=37s#top The App, page, file or service you want Often a folder/file structure Can be data passed Author’s NotesNext is the path of the request. This is separated by slashes / and let the server know the location of the service you’re requesting. They can be setup in a couple of ways. One way is to set it up to represent the directory location of the file you need. So for example, we could assume that watch specified in a youtube request represents the name of a folder in the server hosting the google application. If there was a file called video.mp4 then the path might be /watch/video.mp4. This isn’t the way YouTube or some other service works though, they use the PATHS as information passed to the server. The current way of managing URLs can also be written like this: https://www.youtube.com/watch?v=MspVCc0_R3g&amp;t=37s#top Query/Parametershttps://www.youtube.com/watch ?v=MspVCc0_R3g&amp;t=37s #top Information to pass Name/Value Pairs Author’s NotesThe next part of the URL are called query/parameters. You can use the URL to pass detailed information to the server. Sometimes this data is passed in different ways and query parameters is a common way to do this. The query starts with a question mark and you can then add a series of variables an equal sign = and then each name/value pair separated by an ampersand &amp;. In the case of our video request, we’re passing along the video ID in the v variable and and then the timecode using the t variable. Fragmentshttps://www.youtube.com/watch?v=MspVCc0_R3g&amp;t=37s #top Subordinate resource ID inside page query/parameters Author’s NotesA fragment is another way to pass information through a URL. It refers to a resource that is inside another resource. It’ used in a couple of ways on pages. You’ll often see this used inside a page to refer to another section of the same page with a specific ID. So if you go to the grid page in the Bootstrap Documentation, you’ll see the normal documentation for the grid website, but if you want to read the documentation on grid alignment, you add a # and then the name of the section of the page you want to go to. Sometimes the fragments are used more like query/parameters, it depends on how the server is set up to handle URLs."},{"title":"","date":"2018-01-21T23:19:48.222Z","updated":"2018-01-21T23:19:48.222Z","comments":true,"path":"slides/01b_hosting_on_github.html","permalink":"http://yoursite.com/fid/slides/01b_hosting_on_github.html","excerpt":"","text":"How hosting works Servers have needs Own/Rent/Services Author NotesAlthough every computer on the internet can be a server, not all of them should be. A laptop would be a horrible server because any site hosted in it would go down every time you closed it. So a server needs to have: Constant power Fast connection Maintenance/updates Most companies do not own their own servers because it takes a lot of very specialized knowledge to run and maintain servers. So they either rent servers to perform a variety of web functions or simply pay for specific apps or services like email, file storage, or http hosting. Git/Github Social Coding SCM/VCS Distributed Flat file hosting Author NotesGithub is a website created to help developers use and work with others to manage code. It’s based on a techology called Git, so it provides a number of features that visualize the way that Git works and makes it easier to manage online Git is a software configuration management or SCM piece of software which means that it is designed to help you manage how your software works. There are many kinds of SCM software and Git is known as a VCS or Version Control System. One of the things that makes git unique is that it is a distributed system, which means that the code can be stored on different machines. Git allows multiple people to work on different parts or versions of the software simultaneously. So instead of an assembly line model where each person works on a car right after someone else is done, git will allow someone to paint the car, while someone else installs the engine and someone else puts in the seats. Three things that wouldn’t normally be able to be accomplished at the same time. In this way, Git is like being able to crete alternate universes, where different people can work on copies of the same code without stepping on each others’ toes. Once each person is done, they can submit their version of what they have done to a site like Github, which would manage the project. One of the features that Github provides is the ability to host simple flat-file sites to the web for free. Flat-file sites mean sites that don’t constantly need to make requests to a server for data. It’s more than what we’ll need for this class. Git/Github Language Repository Branches/Forks Commit Pull Request/Merge Issues Author NotesIn this class, we’re going to be working exclusively with Github. Git is an avanced topic outside of the scope of this class, but since Github is based on git, let’s talk about the language you use when working with Git and Github. A Repository or repo is the place where your code is hosted. It’s the grand central station for you code. Github is designed to allow multiple people to have access to the code and a central location for all of that code makes sense. A github repo has it’s own URL that has your username and the name of the repo. Github uses this URL as the basis for many features. Github allows you to create and manage branches and most of the work on repos is done in one of these. Think of each branch as an alternate universe where different people work on versions of code. Each of these branches is known as a fork; dont think of it as a kitchen fork, but more of like a fork in a tree.. So you could have one branch for people working on painting the car, while another branch for people installing the engine. Every project gets on branch which is called the master branch. It’s where the current official version of the project is. Within each of these branches we can store sub-versions of the work into something called commits. Commits are markers that define different states or our code. So, for example, if we had a branch called painting we could create a commit for when we finished painting the hood of the car. Once we finished painting the drivers side, we could have another commit called ‘driverside’, etc. Using git and github we can navigate back and forth through these commits, so that we could go back and take a look at how the care looked before it was painted and after each of the different parts of the car were painted by moving through the commits. In code this also means that we can see the difference between commmits. So you can think of commits like having access to a time machine that lets you move back and forth through the history of the project. Once someone is finishes working with a branch, it’s time to merge the project back to the master branch. We do this through a mechanism called a pull request. A pull request is a way to request that the master branch be updated with the latest version of the code that has been worked on in other branches. So it’s like you telling the boss you’ve finished with your painting and to add your painting code to the car. This step is important because it’s possible for two people to be working on the same part of the code. Think of someone installing the glass in one of the windows while someone else is painting the door. They both made changes to the door and will both need to merge their changes with the main project. Another important concept in Github is the ability for people to file issues. Issues are notes that people can write to call attention to something or to work with tasks related to organizing a project. So, if someone notices a typo on a website, you can create an issue that let’s the owner know where to fix it. Better yet, you can fork the project, fix the typo and then issue a pull request with the changes yourself. This is what makes Github really useful. Lot’s of people can work on the same project and contribute easily and effectively. Github Repos Public/private README.md file Hosting strategy Author NotesGithub offers unlimited free hosting for public projects. You can also host private projects in some of the paid plans. A lot of the web’s most important projects are hosted on Github. One of the most important files in any projects is the README.md file. This is a file with information about the project. Sort of the homepage for your project on Github. It’s written in a format called markdown. It’s a pretty simple format to learn. It’s just simple text with some minor special characters that add formatting. Github’s process for setting up hosting is called Github Pages. It will direct a special URL generated by Github or even your own URL(additional setup required) to show whatever is on your repository. You can set up your URL to point to whatever is on your master branch, a docs folder insider your master branch, a specially named gh-pages branch. The link for your project will be username.github.io by default, although it’s configurable to also be it’s own URL."},{"title":"","date":"2018-01-21T23:19:28.423Z","updated":"2018-01-21T23:19:28.423Z","comments":true,"path":"slides/02_learning_html.html","permalink":"http://yoursite.com/fid/slides/02_learning_html.html","excerpt":"","text":"What is HTML? HyperText Markup Language Hypertext Markup Author NotesHTML stands for HyperText Markup Language and is the language that powers the web. You can break what HTML means into two parts. First is HyperText and then the markup language. Let’s talk about those two things. HyperText is a document that can be linked to other related documents. Since documents are linked to each other, it creates a web of links that we know as the world wide web. HTML is called the Markup Language. Markup is special syntax for annotating a document. Think of markup as what your english teacher would do to a document when they correct it. They would ‘mark it up’ with corrections that need to be done. Semantic HTML One of three Defines structure Never include layout HTML critical Author NotesHTML is one of the big three core languages needed to build ANY web page. They are HTML, CSS and JavaScript. HTML is easily the most important of the three and is in chrage of defining the structure of a page. CSS controls how a page looks and JavaScript controls how users can interact with a website. Without proper HTML, the other two languages won’t work. One of the most important jobs for HTML is to focus on the semantics of your document. Semantic means adding meaning to the content of your page. Every HTML page has three different parts to it. First, is the structure of the document, which is defined by the markup that you use to add meaning to your page. That’s what we’re talking about today. The second is the styles or CSS that can add the look and feel of the document and the last is the JavaScript that adds interactivity to your pages. It’s critical that you let each component or part handle the job it’s designed for. So it’s crucial that you NOT add anything that is not markup to HTML. Certain html markup will make certain things look at certain way, but what’s really important is that you focus on adding meaning, not looks to your document using HTML. HTML is the most critical of the three components. If you mess up the structure of the HTML, then neither the styles will work or the interactivity. Tag Structure1&lt;element [attribute[='value']...&gt;content[&lt;/element&gt;] element name 0-&infin; attributes No order in attributes Author NotesYou start HTML tags using the less than and greater than signs with an element name inside. You can use a number of elements inside the greater and less than signs. There are hundredths of elements and the best place to find them is to look online on this MDN website. Inside the first part of the element you can add none or an infinite number of attributes. These attributes will provide additional information to the browser about the tags you’re using. For example, to create an image, you use the &lt;img&gt; tag, but it doesn’t make sense to add an &lt;img&gt; tag without telling the browser the location of the image, you do that with a src attribute. Standalone vs Container&gt;See the Pen zdmGxJ by Ray Villalobos (@planetoftheweb) on CodePen. Inserts vs wraps Author NotesStandalone tags like the &lt;img&gt; tag are simply there to insert some element like an image into your page. Container tags are designed to wrap some other text or elements, so they change the meaning of what you place in there. Heading ElementsSee the Pen rzqaEv by Ray Villalobos (@planetoftheweb) on CodePen. Denote Importance Author Notes The heading elements are pretty important in HTML, they help you create headings for your document. There are six heading elements and they are containers, so they need beginning and ending versions of the tags. The number denotes importance, so a H1 is more important than an H2 and so on. You should use these to define the level of importance of the headlines in your content. Think of it like a book, the H1 would be the title and the H2 could maybe be chapter titles. Compound Tags See the Pen BdqNzQ by Ray Villalobos (@planetoftheweb) on CodePen. Lists: &lt;ol&gt;, &lt;ul&gt;, &lt;dl&gt; Author Notes Some tags like the list tags are considered compound tags because they require two sets of tags. One that defines the type of list and another that identifies the different elements within the list. In the case of lists an OL means that the order of the list items denotes some sort of order like in military ranks. An unordered list means that the list elements are in no particular order like when you make a list of groceries. Block Level ElementsSee the Pen EvdjRz by Ray Villalobos (@planetoftheweb) on CodePen. Major Sections: &lt;h1&gt;, &lt;p&gt; Author NotesA block-level element occupies the entire space of its parent element (container), thereby creating a “block.” Are usually formatted in a new line before and after the tags by browsers Think of it as a stack of boxes or big containers. Inline ElementsSee the Pen wqYaYP by Ray Villalobos (@planetoftheweb) on CodePen. Inline Elements: &lt;a&gt;, &lt;em&gt; Author NotesInline elements occupy the space that are bound by the parent or container tag, they don’t break the flow of content. They are often placed inside block level elements. Basic Page 12345678910111213141516&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width\"&gt; &lt;title&gt;UPDATE TITLE&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!-- content goes here --&gt;&lt;h1&gt;Headline&lt;/h1&gt;&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores vel vitae temporibus aliquid deleniti id culpa soluta natus, corrupti eaque neque et ratione. Laudantium earum assumenda beatae aspernatur id est.&lt;/p&gt;&lt;!-- content goes here --&gt;&lt;/body&gt;&lt;/html&gt; &lt;DOCTYPE&gt;, &lt;html&gt;, &lt;head&gt;, &lt;meta&gt;, &lt;title&gt;, &lt;body&gt; Author NotesEvery page needs to have a basic page structure using these elements. The &lt;DOCTYPE&gt; element defines the version of HTML that you’re using. The &lt;html&gt; element is the container for your entire document. The &lt;head&gt; element has content that you want the browser to load first and is for information that you want your browser to know about, but not necessarily be displayed to the user. The &lt;meta&gt; element is a generic tag that you can use to pass certain information about your page to your browser. in this case we’re passing along the charset, which is the types of characters used on this page. In this case it’s roman letters with accent marks, but you can use a different charset for japanese or other alphabets. The viewport meta tag tells the browser that this page has been designed with mobile devices in mind. The &lt;title&gt; element displays the title on the window menu of the current page in most browsers. It’s also important for search engines. The &lt;body&gt; element is where all of the content you want your user to be able to see goes. Resources Saving: index.html Validator: Checks for errors Atom Packages: emmet, linter, atom-live-server, linter-htmlhint, html-entities, linter-csslint, emmets-snippets-compatibility Sample Resume Author NotesWhen saving HTML documents you need to use the .html or .htm exension. You can save yourself and your visitors some time by using a special name for your main html document. If a document is named index.html, then the browser will assume it’s the default document for that folder. So, for example, if you’ve placed a document called resume.html in a folder called htmlresume in your projects folder…and your site is called mysite.com, then the URL to this document would be: http://mysite.com/projects/htmlresume/resume.html, however, if you name your document index.html, then you can leave the last part out. So your document would be acessible at: http://mysite.com/projects/htmlresume. It’s a bit shorter and easier to remember. The validator is a way to check that there are no errors in your document structure. ALL HTML PROJECTS MUST VALIDATE To make your life easier, you can install a few Atom packages, they are like extensions to Atom that can provide some extra features. Here’s a sample resume text so that I can practice creating the sample assignment with you in class."},{"title":"","date":"2018-01-16T18:19:07.084Z","updated":"2018-01-16T18:19:07.084Z","comments":true,"path":"slides/demo.html","permalink":"http://yoursite.com/fid/slides/demo.html","excerpt":"","text":"Installing Grab/Fork from repo docs folder has presentation slides/demo.md subfolder has main markdown 100% Markdown Rayveal assumes you want to use markdown to create slides. The index.html file points to a markdown file in slides/demo.md. It does whatever reveal.js can can. You can add invisible notes for yourself using two &gt; &gt; after a carriage return (see markdown file) Author Notes: Author notes are similar to markdown blockquotes, but you use double greater than signs. They won’t appear on your slides, so I personally use them as reading notes, but Reveal.js has a presentation mode that allows you to see them in your slides. Persistent NavigationNotice: the persistent navigation bar at the bottom is on every page. It will disappear after 5 seconds. You can also toggle it by hitting the ctrl-t key. To modify, look for the following code (delete it if you don’t need it) 1234567&lt;footer class=\"footer\"&gt; &lt;div class=\"persistent\"&gt; &lt;strong&gt;Slides:&lt;/strong&gt; &lt;a href=\"http://bit.ly/thenext50\"&gt;bit.ly/thenext50&lt;/a&gt; &amp;bull; &lt;strong&gt;Contact:&lt;/strong&gt; &lt;a href=\"https://www.linkedin.com/in/planetoftheweb\"&gt;LinkedIn&lt;/a&gt; | &lt;a href=\"https://www.linkedin.com/learning/instructors/ray-villalobos\"&gt;courses&lt;/a&gt; | &lt;a href=\"http://twitter.com/planetoftheweb\"&gt;@planetoftheweb&lt;/a&gt; | &lt;a href=\"http://github.com/planetoftheweb\"&gt;github&lt;/a&gt; &lt;/div&gt; &lt;div class=\"smaller\"&gt;Use arrows to navigate, esc for overview&lt;/div&gt;&lt;/footer&gt; Author Notes: Author notes are similar to markdown blockquotes, but you use double greater than signs. They won’t appear on your slides, so I personally use them as reading notes, but Reveal.js has a presentation mode that allows you to see them in your slides. Multiple slidesYou can use multiple markdown files within the same slide, just add a different slide in the slides folder and link to it. (see markdown file for how it works)Sidebar MenuPress the ctrl-m key to show sidebar menu. You can use it to jump to different slides. There is also an index.txt file in the slides menu, where you can add other slides you want to feature in your menu. Standalone FolderPresentations live in a docs folder within the main project, simply upload the docs folder to a server and change the name if you want. It’s self contained. It’s also easy to add as documentation using Github Pages. Fragments Are on by default You can write HTML lists if you don’t want them Code options Bootstrap-like colors for code primary success info warning danger tooltipsfor overlay explanations on rollover Has Icon Template with an icon Preloading font-awesome by Dave Gandy &lt;!– .slide: data-state=”hasicon” –&gt; Background Video &lt;!– .slide: data-state=”textonvideo” data-background-video=”http://planetoftheweb.com/i/video.mp4“ –&gt; Note: You also have the option of creating video as a background using regular reveal.js tags. Background with an imageAnd some text, small shadow… &lt;!– .slide: data-state=”textonimage” data-background-image=”http://planetoftheweb.com/i/photo.jpg“ –&gt; Here’s some code123456789var electron = require('electron');var BrowserWindow = electron.BrowserWindow;var app = electron.app;app.on('ready', function() &#123; var appWindow; appWindow = new BrowserWindow(); appWindow.loadURL('http://raybo.org');&#125;); Syntax highlighted, editable by default Embedded CodeHere’s a sample of an embeded CodePen. Use an iframe. See the Pen Bootstrap 4 by Ray Villalobos (@planetoftheweb) on CodePen. TablesHere’s what a table looks like. Use the tables generator to help you write the markdown. Extra small &lt; 768px Small ≥ 768px Medium ≥992px Large ≥1200px Container Auto 750px 970px 1170px Size .col-xs- .col-sm- .col-md- .col-lg- Column width Auto ~62px ~81px ~97px Circles one two three four five just list items &lt;!– .slide: data-state=”circles” –&gt;"},{"title":"Slides","date":"2018-01-15T23:29:41.636Z","updated":"2018-01-15T23:29:41.636Z","comments":true,"path":"slides/index.html","permalink":"http://yoursite.com/fid/slides/index.html","excerpt":"","text":""},{"title":"","date":"2018-01-15T23:29:41.636Z","updated":"2018-01-15T23:29:41.636Z","comments":true,"path":"slides/slides.html","permalink":"http://yoursite.com/fid/slides/slides.html","excerpt":"","text":""},{"title":"Course Syllabus","date":"2018-01-06T19:34:20.000Z","updated":"2018-01-16T18:48:00.266Z","comments":true,"path":"syllabus/index.html","permalink":"http://yoursite.com/fid/syllabus/index.html","excerpt":"","text":"The purpose of Fundamentals of Interactive Design is to give the students an overview of working with core Web Technologies and learning to build a web presence. Specifically, you’ll learn the basics of HTML, CSS and we’ll use the Bootstrap framework to build a series of smaller and large projects. Materials needed A Github Account (free) A lynda.com account An HTML text editor: Visual Studio Code or Atom Note: There is no book required for this class. Class Structure I’ll start each class reviewing the week’s previous assignments. This is an important way for me to give you feedback on the work you’re doing for the class and it’s part of working in the field. Please don’t take it personally, critiques can be difficult to hear, but I have your best interests in mind. I expect you to be here during this time and listen to what I tell you. I also expect you to fix issues I mention during the critiques. After critiques, I’ll give the class a lecture and may give you a link to an online slide presentation. The presentation may have some short exercises for you to finish during class. After the lecture, we’ll have some lab time for this course. I expect you to use this time to work through the exercises. Do NOT work on other class coursework during my class. If you don’t have any questions or are caught up on your assignments you are welcome to leave the class quietly. Assignment SubmissionsAssignments in this class are designed to help you work towards your projects. A big part of your grade will depend on you being able to keep up with the assignments. Assignments are due on the time and date mentioned in Canvas. If you fail to turn assignments in when they’re due, you’ll receive a 0 for the assignment. I will grade assignments roughly the week after they’re due. Use that time to correct errors or issues I’ve mentioned during the critiques for a better grade. Make sure you read the instructions and ruberic for the assignments. I will award different points as detailed in the ruberic section of the assignments. Github RepoIn addition to Canvas, there is a github repository for this course, where you can ask questions and find slides and other documentation for the course. You’ll be creating your own repository for the course in order to do the assignments, so make sure you get started by getting a github account. Asking questionsIf you have questions, you can easily ask them usingGithub Issues. Please make sure you follow the guidelines for issue submissions. It’s not realistic for me to be answering questions about the assignments hours before the assignment is due, so make sure you get started early, so you can give me enough time to answer and for you to react to those answers. I expect you to ask me questions no later than a day before the assignment is due. Personal Assistance in LabsI am an adjunct, which means that I have no office hours or an office at the college. I can answer questions through github issues and will be happy to do so or help you during class. If you need additional assistance, there are a number of labs available throughout the campus. Make sure youcheck the schedules for when the labs are available. Learn more Github for Web Designers Learn Git and Github Git Essential Training"},{"title":"","date":"2018-01-23T06:58:17.974Z","updated":"2018-01-23T06:58:17.000Z","comments":true,"path":"slides/03_structural-html.html","permalink":"http://yoursite.com/fid/slides/03_structural-html.html","excerpt":"","text":"The HTML Outline Right click -&gt; Inspect Author NotesWhen you create a page, you start with some text and what you’re doing as a developer is adding markup to that content that helps define the structure of the page. You can think of it as creating an outline of a book. The book might have a title and some headlines or other content. You can take a peek at this outline using different browsers. In Google Chrome, you can right click on a page and then choose inspect. You’ll be taken to a special developer view where you can see the outline that HTML is describing. On the left side of the elements tab, you’ll see a series of triangles that you can use to expand and collapse the outline. There’s also an outline navigation bar at the very bottom of the page. Notice that when you hover over the content on the page or you make selections on the elements tab, the browsers will highlight that area of the page. Your editor can also do that, but only if you’re using whitespace to intent code properly. Structural Elements Block level Define Areas Common and Generic Author NotesStructural elements in HTMl are a set of block level elements that help you futher enhance the structure of your sites. By block level, we mean that these are major sections of your site which are usually displayed as having space before and after the section. They are useful because them make it easy to define areas of content and separate the regular content from utility areas on your HTML. So for example, you can identify a section of code to represent a footer. That usually means the bottom of a page or even another section with some supporting content. They are usually fairly common areas that people have on websites like headers, footers, navigation, sidebars, etc. Although these names have specific conotations in terms of usage, they are flexible enough so that they can take on a few different contexts. For example, you can have the footer tag come to define the bottom footer of the whole page, but it could also mean a footer at the bottom of some html displaying a product. Header Introductory content Inside other elements See the Pen Header Sample by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe header element represents introductory content and it’s often used at the top of a page. At the top of the page it often contains the navigation for the site or some introductory content. It can sometimes be confused with the head element which is used for items you don’t want the browser to display. However, a header can also be used inside other elements, so for example you can have a sidebar header or an article header. Footer Ending of content Often at bottom See the Pen Footer Sample by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesA footer element represents is a special section that represents the footer or the end of some level of content. It’s often used at least at the bottom of a website to represent things like copyright information, information about the author of the website, copyright information and links to related documents. However, just like with the header, it can also be used to define the beginning part of an element like a card, a sidebar, and article or others. Nav Element Major Blocks Screen Readers &amp; Search Engines UL or A See the Pen ZXoMmO by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe role of the nav element is to identify major blocks of navigation. This is an important distinction because it means that smaller grouping of links should not necessarily receive nav elements. It’s up to you to determine when a grouping of links should be identified as a nav. Generally it’s meant for links that are internal to the website. Most pages have at least some navigation at the top of the page as well as some secondary bottom navigation or maybe some sidebar navigation. Identifying navs in your document can help screen readers as well as search engines understand the role of these set of links better. So, for example screen readers might omit the rendering of this section and search engines might be able to use these to navigate through an entire website. This is a compound tag and inside these people usually have either a list element UL or just a set of links A. Technically, a list element is considered more appropriate for a navigation, but a series of links isn’t uncommon. Article Can stand alone Should have headings Can be nested See the Pen Article Example by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe article element is one of those hard to explain elements. It represents a complete, self-contained composition in a document, page, application or site. These could be things like forum posts, magazine or newspaper articles, blog entries, user-submitted comments, interactive widgets, etc. It should be something that can stand alone on a page. I tend to think of the article element as one of two things, like a literal article that someone writes or as an article of clothing. So if you’re looking at a list of shoes on nike.com, each of the pieces of code describing the shoes could be thought of as an article. Articles should include a heading h1-h6 inside the article tag. You can also nest articles inside other articles (say a list of the types of shoelaces options you can get for the shoes). In the example above, I could have tagged each ‘article’ as an artile, but because it is a grouping of articles and I have a headline that identifies the grouping, it’s fine to use the article tag for the entire grouping. Section Thematic grouping Should have headings Can be nested See the Pen Section Example by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe section element can be as confusing as the article element and it’s description is somewhat generic by nature. It represents a thematic grouping of content. That means that sections are part of a bigger grouping of elements. A page could be split into sections for things like introduction, news items, contact information, etc. If it can stand alone, it should probably be an article, if it a piece that is part of another element, then it can be a section. Main The main thing Nested intelligently See the Pen Main Example by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThankfully, the main element is really easy to figure out. It represents the main content of the body of a document or portion of the document. It consists of content that is directly related to the central topic of, a document or the central functionality of an application. It can be really useful to screen readers and search engines so that they can immediately identify the most important content in your document. You can use multiple elements within the same page when it makes sense to do so, for example if you have another section like a card that has it’s own header and a footer where the main content of the card needs to be identified as the main content of the card. Aside Related Content Can appear many times Do not use for pullquotes See the Pen Aside Example by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe HTML aside element represents a portion of a document whose content is indirectly related to the document’s or other element’s main content. They can appear many times within a document whenever there is some related content in an article or section, but it’s also often used for a sidebar on a website. The specifications say that asides shouldn’t be used for things like pullquotes because they are considered to be part of the current element, so use it only for related elements. Div Generic Grouping No meaning Class or IDs See the Pen DIV Example by Ray Villalobos (@planetoftheweb) on CodePen. Author NotesThe DIV tag is what we call a generic block level tag because it’s used to group content, but not pass any sort of meaning to the content. Before things like the article, nav and footer tags existed, the div tag was used to create those elements. Because they have no meaning, it means that it’s often used for layout purposes or when a grouping needs to be made for which there is no existing tag. It’s sort of a measure of last resort. You can add meaning to a div using the class or id attributes. As a matter of fact before the modern semantic tags existed, you assigne the meaning to divs using these. So for example would would create div with a class of nav 12&lt;div class=\"nav\"&gt;&lt;/div&gt; The problem with this approach is that humans weren’t always consistent with their naming conventions, so some people would use a class of nav and others a class of navigation or topnav, etc. Because things got messy, HTML5 introduced consistent elements for commonly used segments of code (nav, aside, header, footer). If you do create groupings using div, you can use the id or class attributes as I mentioned. The main difference between these is that an ID shoud be unique on the page. So if you create an element with an ID of topnav. 12&lt;div id=\"topnav\"&gt;&lt;/div&gt; Then that element shouldn’t exist anywhere else on the current page. Scripts and styles may not work properly when there is more than one element with the same ID. ID’s have one more superpower, you can link to them using anchor tags a. If you need to use the same attribute name, then use a class attribute. Elements can have one or more classnames and more than one element on the page can have the same class name."}],"posts":[{"title":"HTML Page with Structural Tags","slug":"structural-html","date":"2018-01-23T05:00:00.000Z","updated":"2018-01-21T23:23:08.979Z","comments":true,"path":"assignments/structural-html/","link":"","permalink":"http://yoursite.com/fid/assignments/structural-html/","excerpt":"Create a valid page with structural HTML tags.","text":"Create a valid page with structural HTML tags. https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure https://www.lynda.com/Web-Development-tutorials/Controlling-document-outlines/170427/196153-4.html https://www.lynda.com/Web-Development-tutorials/nav-element/170427/196154-4.html https://www.lynda.com/Web-Development-tutorials/article-element/170427/196155-4.html https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section https://www.lynda.com/Web-Development-tutorials/section-element/170427/196156-4.html https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div https://www.lynda.com/Web-Development-tutorials/div-element/170427/196158-4.html https://www.lynda.com/Web-Development-tutorials/Other-semantic-elements/170427/196159-4.html https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer https://www.lynda.com/Web-Development-tutorials/Linking-page-regions/170427/196168-4.html http://csslint.net/ https://www.lynda.com/CSS-tutorials/Default-browser-styles/578096/625175-4.html https://www.lynda.com/CSS-tutorials/Inline-internal-external-CSS/569190/601576-4.html https://www.lynda.com/CSS-tutorials/Naming-conventions/569190/601578-4.html Create a single page document for your website with basic information for your portfolio. Watch/read theseDefault Browser StylesInline, Internal and external CSSNaming ConventionsType, Class and ID selectorsPseudo Class SelectorsRGB, Hex and Keyword Color ValuesCascading Inheritance and SpecificityTurning in your projectInside that folder, create a subfolder called cssbasicsInside that folder, create a file called style.cssCopy the index.html file from the previous projectUpload the folder to your github repo (drag and drop it onto your repository)Use the w3c validator and make sure your the URL to your project validatesUse csslint to validate and verify your css ExpectationsUs","categories":[{"name":"assignments","slug":"assignments","permalink":"http://yoursite.com/fid/categories/assignments/"}],"tags":[{"name":"html","slug":"html","permalink":"http://yoursite.com/fid/tags/html/"},{"name":"week 03","slug":"week-03","permalink":"http://yoursite.com/fid/tags/week-03/"}]},{"title":"Create a Valid HTML Page","slug":"valid-html","date":"2018-01-16T05:00:00.000Z","updated":"2018-01-15T23:57:12.184Z","comments":true,"path":"assignments/valid-html/","link":"","permalink":"http://yoursite.com/fid/assignments/valid-html/","excerpt":"Create a single page document for your website with basic information for your portfolio. Launch Presentation | Slide Notes","text":"Create a single page document for your website with basic information for your portfolio. Launch Presentation | Slide Notes Watch these The importance of HTML Basic HTML Syntax Exploring an HTML document structure Formatting content with HTML The Value of Structure Creating links Inserting images Unordered lists Turning in your project On your desktop, create a folder called projects Inside that folder, create a subfolder called validhtml Inside that folder, create a file called index.html Use this basic html template to get your page started Inside the body section of the document write some text with a basic portfolio Upload the folder to your github repo (drag and drop it onto your repository) Use the w3c validator and make sure your the URL to your project validates Sections for resumeA short paragraph with a welcome message plus 4-6 sentences that include a short bio about yourself (see the example bio on my LinkedIn Learning page. SkillsAn unordered list of your skills. These would be something other than software skills. In LinkedIn, they appear in the Featured Skills and endorsements. For example the top skills on my LinkedIn profile are listed as: User Interface Design, User Experience, Web Development, CSS, JavaScript, etc. Please list at least ten skills…think of the skills you’ll be learning in this or other classes this semester. Software/HardwareThis is a list of the software and hardware you’re comfortable with. Don’t use specific version of software. If possible, try to make it specific to your career. If you’re going into graphic design, then perhaps Photoshop and InDesign might be something you’d list, for 3-D animation, perhaps Maya and for video, After Effects. At least five. Social Media/WebA list of links to your public social media profiles or other websites where people can find you; things like LinkedIn, Twitter, Youtube, etc. At the very least, you should link to your website address, and your github repo. If you’re a graphic designer, perhaps a link to Beehance. Work SamplesThese will be images to samples of previous work. If you’ve done some work for other classes, these will be a great place for them. If you don’t already have them online, upload them to your server like you did the photos and create links for them. At least 5 images. Expectations Use headlines (H1-H6) for headings Use paragraph tags for paragraphs Use br tags, but ONLY for breaking up single lines of text. DO NOT use this for formatting your document or adding extra vertical spacing. Convert text links to URLs using the anchor tag Convert links to work samples to images using the img tag. Use ordered and unordered lists where necessary. Use the strong tag to give strong importance to text. DO NOT use any tags not mentioned in this list. DO NOT use anything that will format or style the document in any way.","categories":[{"name":"assignments","slug":"assignments","permalink":"http://yoursite.com/fid/categories/assignments/"}],"tags":[{"name":"html","slug":"html","permalink":"http://yoursite.com/fid/tags/html/"},{"name":"week 02","slug":"week-02","permalink":"http://yoursite.com/fid/tags/week-02/"}]},{"title":"Create a Github Repository and Site","slug":"github-site","date":"2018-01-09T05:00:00.000Z","updated":"2018-01-16T21:11:46.000Z","comments":true,"path":"bob/github-site/","link":"","permalink":"http://yoursite.com/fid/bob/github-site/","excerpt":"For this assignment, you’ll simply create a Github Account and create your first Github issue in the class repo","text":"For this assignment, you’ll simply create a Github Account and create your first Github issue in the class repo Class Resources Slides Notes Online Resources Creating a new Repository Creating an Issue in Github Configuring Github Pages markdown syntax Information for Github IssueIn the issue you will include the following: A link to your public class Github Repository A link to your Github Pages site. A one or two sentence answer to each of the following questions (pretend you’re interviewing for a job in my company) What experience do you have building websites? What software experience do you currently have? What are some of your strongest soft skills (read this)? Where do you see yourself working after you complete your studies? Submitting the IssueCreate a README.md file on your site (help with markdown syntax). You’re welcome to use the same info in the issues or keep it simpler. Remember that Github as well as this class repo is a public website, so the issues will be public. You don’t have to put your name on these. You will submit a link to your Github Issue in canvas to complete this assignment.","categories":[{"name":"bob","slug":"bob","permalink":"http://yoursite.com/fid/categories/bob/"}],"tags":[{"name":"github","slug":"github","permalink":"http://yoursite.com/fid/tags/github/"},{"name":"week 01","slug":"week-01","permalink":"http://yoursite.com/fid/tags/week-01/"}]},{"title":"Create a Lynda.com Account","slug":"lynda-com","date":"2018-01-09T05:00:00.000Z","updated":"2018-01-15T23:29:41.634Z","comments":true,"path":"assignments/lynda-com/","link":"","permalink":"http://yoursite.com/fid/assignments/lynda-com/","excerpt":"For this assignment you will create an account for lynda.com. It’s not a free account, but you can find it at some public libraries for free. Go to your public library and ask for a special code to receive a lynda.com account. They will give you further instructions to set this up.","text":"For this assignment you will create an account for lynda.com. It’s not a free account, but you can find it at some public libraries for free. Go to your public library and ask for a special code to receive a lynda.com account. They will give you further instructions to set this up. Seminole Library Osceola Library Orange Library Volusia Library Veterans How to use Lynda.com To submit this assignment, send me a screenshot of the lynda.com website once you’ve created and set up your lynda.com account. I should be able to see your name or account on the upper right hand site of the screenshot. Videos Taking a Screenshot on a PC Taking a Screenshot on a Mac","categories":[{"name":"assignments","slug":"assignments","permalink":"http://yoursite.com/fid/categories/assignments/"}],"tags":[{"name":"week 01","slug":"week-01","permalink":"http://yoursite.com/fid/tags/week-01/"},{"name":"lynda","slug":"lynda","permalink":"http://yoursite.com/fid/tags/lynda/"}]}]}